{"version":3,"sources":["tetris/wasm_exec.js","tetris sync","common/util/helpers.ts","interactive-ml/agents/QLearningAgent.ts","common/colors.ts","interactive-ml/components/Katex.tsx","interactive-ml/util/latex.ts","interactive-ml/components/BellmanUpdateKatex.tsx","interactive-ml/components/Button.tsx","interactive-ml/envs/NChain.ts","interactive-ml/Game.ts","interactive-ml/Scene.js","interactive-ml/scene-objects/AgentObject.ts","interactive-ml/scene-objects/ChainEnvironment.js","interactive-ml/scene-objects/CoinEmitter.ts","interactive-ml/scene-objects/NumberObject.js","interactive-ml/scene-objects/Table.ts","common/util/useWindowSize.js","interactive-ml/pages/QLearningPage.tsx","interactive-ml/hooks/useStaging.tsx","snake/envs/SnakeEnv.ts","snake/components/SnakeRenderer.tsx","tetris/tetrominos.ts","portfolio/pages/HomePage.tsx","tetris/EnemyGrid.ts","tetris/Renderer.ts","tetris/constants.ts","tetris/pages/TetrisPage.tsx","portfolio/pages/TestPage.tsx","text/components/TextEditor.styles.ts","text/components/ParagraphBlock.tsx","text/components/HeaderBlock.tsx","common/util/randomID.ts","text/components/TextEditor.tsx","text/pages/TextPage.tsx","clipboard/pages/ClipboardPage.styles.ts","clipboard/pages/ClipboardPage.tsx","portfolio/pages/GainsPage.styles.ts","portfolio/pages/GainsPage.tsx","App.tsx","serviceWorker.js","index.js"],"names":["global","window","self","Error","isNodeJS","process","title","require","fs","nodeCrypto","crypto","getRandomValues","b","randomFillSync","performance","now","hrtime","util","TextEncoder","TextDecoder","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","nl","decoder","decode","lastIndexOf","console","log","substr","length","write","offset","position","callback","this","open","path","flags","mode","err","code","read","buffer","fsync","encoder","Go","argv","env","exit","warn","_exitPromise","Promise","resolve","_resolveExitPromise","_pendingEvent","_scheduledTimeouts","Map","_nextCallbackTimeoutID","mem","DataView","_inst","exports","setInt64","addr","v","setUint32","Math","floor","getInt64","getUint32","getInt32","loadValue","f","getFloat64","isNaN","id","_values","storeValue","setFloat64","undefined","ref","_refs","get","push","set","typeFlag","loadSlice","array","len","Uint8Array","loadSliceOfValues","a","Array","i","loadString","saddr","timeOrigin","Date","importObject","go","sp","exited","p","n","msec","getTime","setInt32","setTimeout","_resume","clearTimeout","delete","result","Reflect","getsp","m","args","apply","setUint8","construct","parseInt","str","encode","String","debug","value","instance","NaN","strPtr","ptr","argc","argvPtrs","forEach","arg","keys","Object","sort","key","run","resume","event","arguments","stderr","slice","assign","TMPDIR","tmpdir","WebAssembly","instantiate","readFileSync","then","on","catch","webpackEmptyContext","req","e","module","argMax","map","x","reduce","r","array2D","rows","cols","val","row","transpose","matrix","_","j","sleep","ms","resizeCanvas","canvasRef","width","height","current","devicePixelRatio","ctx","getContext","scale","QLearningAgent","options","gamma","lr","eps","epsDecay","qTable","updateData","zero2D","stateSpace","actionSpace","state","min","max","random","error","action","newState","reward","done","nextAction","currentQ","nextQ","darkGray","Color","rgb","gray","lightGray","green","darkGreen","blue","darkBlue","red","purple","yellow","brown","orange","QLearningColors","nextState","KatexDiv","styled","div","colors","toString","props","fontSize","Katex","html","katex","renderToString","expression","dangerouslySetInnerHTML","__html","colorbox","color","text","raw","hex","textcolor","BellmanUpdateKatex","data","actionString","nextActionString","Qsa","Qsa2","Qsan","Qsan2","style","left","top","y","toFixed","clickEffect","keyframes","ButtonDiv","React","forwardRef","buttonRef","useRef","useImperativeHandle","click","animation","offsetWidth","onClick","NChainEnv","slip","small","large","episode_length","stepCount","slipped","info","Game","agent","prevState","lastReward","totalReward","lastAction","reset","step","update","finishEpisode","getAction","agentTakeAction","Scene","canvas","size","sceneObjects","requestAnimationFrame","render","bind","fillStyle","fillRect","obj","TWEEN","AgentObject","redness","newX","Tween","to","start","beginPath","arc","PI","fill","fade","ChainEnvironment","RADIUS","DIST","states","highlightedStates","strokeStyle","lineWidth","moveTo","lineTo","stroke","font","textAlign","fillText","index","CoinEmitter","coins","Set","end","delay","coin","opacity","fading","add","easing","Easing","Cubic","Out","onComplete","NumberObject","precision","modifier","newVal","newValColor","newValOpacity","newValOffset","valOpacity","valOffset","activeTween","animated","animationDuration","stop","onStop","onAnimationFinish","Table","CELL_WIDTH","CELL_HEIGHT","numberObjects","highlightedCells","temp","newData","updateVal","cells","repositionNumbers","cell","col","rect","useWindowSize","isClient","getSize","useCallback","innerWidth","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","initialAgentOptions","glob","prepareForEnv","game","rewardNumberObject","envObject","coinEmitter","agentObject","tableObject","Page","QLearningPage","sceneRef","setStepCount","autoPlay","setOptions","stages","stage","setStage","keyCode","useStaging","alert","agentTookAction","leftButtonRef","rightButtonRef","handleKeyDown","preventDefault","document","move","clear","startX","angle","emit","cos","sin","highlightCells","highlightStates","onUpdate","label","background","SnakeEnv","boardSize","foodReward","deathReward","player","food","gather","shape","equal","sum","bufferSync","outOfBounds","tf","tail","head","collidedWithTail","currentPosition","actionUpdateMap","newPosition","concat","reshape","playerOnFood","randomizeFood","allButLast","playerOutOfBounds","newObservation","getObservation","foodEntry","reverse","playerEntries","updates","values","SnakeRendererDiv","desaturate","obs","snakeGlobals","stopRunning","disableInput","modelUpdating","SnakeRenderer","observation","setObservation","setTotalReward","updateModel","model","newObs","prediction","predict","nextRewardPrediction","targetActionScore","arraySync","fit","toTensor","epochs","runModel","print","newDone","runModelDebounced","compile","optimizer","loss","keyToActionMap","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","obsArray","className","snake","classNames","HomePageDiv","HomePageBackground","Links","HomePage","themes","link","name","themeKey","location","hash","choices","theme","href","target","jlstzOffsets","tetrominos","minos","offsets","rotateCoords","coords","coord","type","tetromino","getMinos","orientation","getColor","memoize","alpha","EnemyGrid","WIDTH_HEIGHT_RATIO","GUTTER_WIDTH_RATIO","enemies","fullWidth","fullHeight","gapWidth","maxEnemyWidth","grid","enemyWidth","animatedEnemyWidth","yOffset","duration","Quadratic","InOut","enemyCount","compact","sideWidth","getSideWidth","enemyWidthWide","rowCap","sideCols","enemyHeight","gutterWidth","ceil","bestEnemyWidth","bestRowCount","bestColCount","enemyHeightTall","colCap","enemyWidthTall","newEnemies","getOptimalDimensions","setEnemyWidth","addNewEnemies","newGrid","findEmptyColsLoop","getGutterWidth","findEmptyRowsLoop","expectedHeight","getGridExpectedHeight","enemy","has","gen","addPath","next","side","startJ","endJ","sidePath","right","l","updateYOffset","removeMissingEnemies","getGridCapacity","expand","enemyCoords","centerX","colsRight","colsLeft","addCoords","translate","activePiece","translation","activePieceIsColliding","field","pieceType","pos","Renderer","enemyGrid","enemyStates","playerState","unit","completeness","strokeRect","verticalCompleteness","centerY","topY","bottomY","horizontalCompleteness","leftX","rightX","ghost","MATRIX_ROWS","opts","borderCompleteness","showGrid","fieldOpacity","renderBorder","renderGrid","globalAlpha","renderLand","renderActivePiece","ghostPiece","testShift","moveToGround","nextPieces","held","margin","renderHoldSlot","hold","renderGameField","renderBagPreview","getHeight","frameWidth","frameHeight","renderGameFrame","getWidth","enemyState","animationType","animationProgress","cid","setMaxEnemyWidth","getEnemyCoordinates","entries","renderEnemy","clearRect","selfWidth","renderSelf","renderEnemies","serverState","clientID","playerStates","tween","predictedState","keyBindings","keyDown","TetrisPageDiv","playerInputs","instantiateStreaming","fetch","goToJSPlayerState","s","jsToGoPlayerState","TetrisPage","everythingState","predictedStates","inputHistory","actionIndex","frameStartTime","serverTimeOffset","renderer","onKeyDown","sendInput","downTime","lastTriggered","onKeyUp","startLocalGameEngine","socket","WebSocket","onopen","onmessage","parsedData","JSON","parse","messageType","time","produce","draft","everything","newClientState","replaceIndex","stringify","predictingTime","inputs","lastPredictedState","updateGame","goResult","newPlayerState","reconcileServerState","updateFromServer","command","clientPlayerInput","serverPlayerInput","playerID","send","predictState","updateFromPrediction","rightKey","leftKey","downKey","msUntilNextUpdate","animate","renderEverything","TestPage","Wrapper","ParagraphBlock","block","nodeRef","content","HeaderBlock","Tag","level","randomID","TextEditor","blocks","setBlocks","onContentUpdate","selection","getSelection","anchorElement","focusElement","anchorNode","Element","parentElement","focusNode","anchorBlockNode","closest","focusBlockNode","blockID","blockIndex","innerHTML","old","convertDomToModel","contentEditable","suppressContentEditableWarning","onPaste","group","items","clipboardData","item","loggedObject","getData","asFile","getAsFile","asEntry","webkitGetAsEntry","getAsString","asString","kind","groupEnd","Component","TextPage","Input","textarea","ClipboardPage","placeholder","Items","Item","ItemTitle","HoverVideo","video","src","thumbnailTime","currentTime","pause","playsInline","onTouchStart","currentTarget","play","onTouchEnd","onMouseEnter","onMouseLeave","GainsPage","App","exact","component","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b5c0d35.chunk.js","sourcesContent":["/* eslint-disable */\n\n// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n(() => {\n  if (typeof global !== \"undefined\") {\n    // global already exists\n  } else if (typeof window !== \"undefined\") {\n    window.global = window;\n  } else if (typeof self !== \"undefined\") {\n    self.global = self;\n  } else {\n    throw new Error(\n      \"cannot export Go (neither global, window nor self is defined)\"\n    );\n  }\n\n  // Map web browser API and Node.js API to a single common API (preferring web standards over Node.js API).\n  const isNodeJS = global.process && global.process.title === \"node\";\n  if (isNodeJS) {\n    global.require = require;\n    global.fs = require(\"fs\");\n\n    const nodeCrypto = require(\"crypto\");\n    global.crypto = {\n      getRandomValues(b) {\n        nodeCrypto.randomFillSync(b);\n      }\n    };\n\n    global.performance = {\n      now() {\n        const [sec, nsec] = process.hrtime();\n        return sec * 1000 + nsec / 1000000;\n      }\n    };\n\n    const util = require(\"util\");\n    global.TextEncoder = util.TextEncoder;\n    global.TextDecoder = util.TextDecoder;\n  } else {\n    let outputBuf = \"\";\n    global.fs = {\n      constants: {\n        O_WRONLY: -1,\n        O_RDWR: -1,\n        O_CREAT: -1,\n        O_TRUNC: -1,\n        O_APPEND: -1,\n        O_EXCL: -1\n      }, // unused\n      writeSync(fd, buf) {\n        outputBuf += decoder.decode(buf);\n        const nl = outputBuf.lastIndexOf(\"\\n\");\n        if (nl != -1) {\n          console.log(outputBuf.substr(0, nl));\n          outputBuf = outputBuf.substr(nl + 1);\n        }\n        return buf.length;\n      },\n      write(fd, buf, offset, length, position, callback) {\n        if (offset !== 0 || length !== buf.length || position !== null) {\n          throw new Error(\"not implemented\");\n        }\n        const n = this.writeSync(fd, buf);\n        callback(null, n);\n      },\n      open(path, flags, mode, callback) {\n        const err = new Error(\"not implemented\");\n        err.code = \"ENOSYS\";\n        callback(err);\n      },\n      read(fd, buffer, offset, length, position, callback) {\n        const err = new Error(\"not implemented\");\n        err.code = \"ENOSYS\";\n        callback(err);\n      },\n      fsync(fd, callback) {\n        callback(null);\n      }\n    };\n  }\n\n  const encoder = new TextEncoder(\"utf-8\");\n  const decoder = new TextDecoder(\"utf-8\");\n\n  global.Go = class {\n    constructor() {\n      this.argv = [\"js\"];\n      this.env = {};\n      this.exit = code => {\n        if (code !== 0) {\n          console.warn(\"exit code:\", code);\n        }\n      };\n      this._exitPromise = new Promise(resolve => {\n        this._resolveExitPromise = resolve;\n      });\n      this._pendingEvent = null;\n      this._scheduledTimeouts = new Map();\n      this._nextCallbackTimeoutID = 1;\n\n      const mem = () => {\n        // The buffer may change when requesting more memory.\n        return new DataView(this._inst.exports.mem.buffer);\n      };\n\n      const setInt64 = (addr, v) => {\n        mem().setUint32(addr + 0, v, true);\n        mem().setUint32(addr + 4, Math.floor(v / 4294967296), true);\n      };\n\n      const getInt64 = addr => {\n        const low = mem().getUint32(addr + 0, true);\n        const high = mem().getInt32(addr + 4, true);\n        return low + high * 4294967296;\n      };\n\n      const loadValue = addr => {\n        const f = mem().getFloat64(addr, true);\n        if (f === 0) {\n          return undefined;\n        }\n        if (!isNaN(f)) {\n          return f;\n        }\n\n        const id = mem().getUint32(addr, true);\n        return this._values[id];\n      };\n\n      const storeValue = (addr, v) => {\n        const nanHead = 0x7ff80000;\n\n        if (typeof v === \"number\") {\n          if (isNaN(v)) {\n            mem().setUint32(addr + 4, nanHead, true);\n            mem().setUint32(addr, 0, true);\n            return;\n          }\n          if (v === 0) {\n            mem().setUint32(addr + 4, nanHead, true);\n            mem().setUint32(addr, 1, true);\n            return;\n          }\n          mem().setFloat64(addr, v, true);\n          return;\n        }\n\n        switch (v) {\n          case undefined:\n            mem().setFloat64(addr, 0, true);\n            return;\n          case null:\n            mem().setUint32(addr + 4, nanHead, true);\n            mem().setUint32(addr, 2, true);\n            return;\n          case true:\n            mem().setUint32(addr + 4, nanHead, true);\n            mem().setUint32(addr, 3, true);\n            return;\n          case false:\n            mem().setUint32(addr + 4, nanHead, true);\n            mem().setUint32(addr, 4, true);\n            return;\n        }\n\n        let ref = this._refs.get(v);\n        if (ref === undefined) {\n          ref = this._values.length;\n          this._values.push(v);\n          this._refs.set(v, ref);\n        }\n        let typeFlag = 0;\n        switch (typeof v) {\n          case \"string\":\n            typeFlag = 1;\n            break;\n          case \"symbol\":\n            typeFlag = 2;\n            break;\n          case \"function\":\n            typeFlag = 3;\n            break;\n        }\n        mem().setUint32(addr + 4, nanHead | typeFlag, true);\n        mem().setUint32(addr, ref, true);\n      };\n\n      const loadSlice = addr => {\n        const array = getInt64(addr + 0);\n        const len = getInt64(addr + 8);\n        return new Uint8Array(this._inst.exports.mem.buffer, array, len);\n      };\n\n      const loadSliceOfValues = addr => {\n        const array = getInt64(addr + 0);\n        const len = getInt64(addr + 8);\n        const a = new Array(len);\n        for (let i = 0; i < len; i++) {\n          a[i] = loadValue(array + i * 8);\n        }\n        return a;\n      };\n\n      const loadString = addr => {\n        const saddr = getInt64(addr + 0);\n        const len = getInt64(addr + 8);\n        return decoder.decode(\n          new DataView(this._inst.exports.mem.buffer, saddr, len)\n        );\n      };\n\n      const timeOrigin = Date.now() - performance.now();\n      this.importObject = {\n        go: {\n          // Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n          // may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n          // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n          // This changes the SP, thus we have to update the SP used by the imported function.\n\n          // func wasmExit(code int32)\n          \"runtime.wasmExit\": sp => {\n            const code = mem().getInt32(sp + 8, true);\n            this.exited = true;\n            delete this._inst;\n            delete this._values;\n            delete this._refs;\n            this.exit(code);\n          },\n\n          // func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n          \"runtime.wasmWrite\": sp => {\n            const fd = getInt64(sp + 8);\n            const p = getInt64(sp + 16);\n            const n = mem().getInt32(sp + 24, true);\n            fs.writeSync(\n              fd,\n              new Uint8Array(this._inst.exports.mem.buffer, p, n)\n            );\n          },\n\n          // func nanotime() int64\n          \"runtime.nanotime\": sp => {\n            setInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n          },\n\n          // func walltime() (sec int64, nsec int32)\n          \"runtime.walltime\": sp => {\n            const msec = new Date().getTime();\n            setInt64(sp + 8, msec / 1000);\n            mem().setInt32(sp + 16, (msec % 1000) * 1000000, true);\n          },\n\n          // func scheduleTimeoutEvent(delay int64) int32\n          \"runtime.scheduleTimeoutEvent\": sp => {\n            const id = this._nextCallbackTimeoutID;\n            this._nextCallbackTimeoutID++;\n            this._scheduledTimeouts.set(\n              id,\n              setTimeout(\n                () => {\n                  this._resume();\n                },\n                getInt64(sp + 8) + 1 // setTimeout has been seen to fire up to 1 millisecond early\n              )\n            );\n            mem().setInt32(sp + 16, id, true);\n          },\n\n          // func clearTimeoutEvent(id int32)\n          \"runtime.clearTimeoutEvent\": sp => {\n            const id = mem().getInt32(sp + 8, true);\n            clearTimeout(this._scheduledTimeouts.get(id));\n            this._scheduledTimeouts.delete(id);\n          },\n\n          // func getRandomData(r []byte)\n          \"runtime.getRandomData\": sp => {\n            crypto.getRandomValues(loadSlice(sp + 8));\n          },\n\n          // func stringVal(value string) ref\n          \"syscall/js.stringVal\": sp => {\n            storeValue(sp + 24, loadString(sp + 8));\n          },\n\n          // func valueGet(v ref, p string) ref\n          \"syscall/js.valueGet\": sp => {\n            const result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n            sp = this._inst.exports.getsp(); // see comment above\n            storeValue(sp + 32, result);\n          },\n\n          // func valueSet(v ref, p string, x ref)\n          \"syscall/js.valueSet\": sp => {\n            Reflect.set(\n              loadValue(sp + 8),\n              loadString(sp + 16),\n              loadValue(sp + 32)\n            );\n          },\n\n          // func valueIndex(v ref, i int) ref\n          \"syscall/js.valueIndex\": sp => {\n            storeValue(\n              sp + 24,\n              Reflect.get(loadValue(sp + 8), getInt64(sp + 16))\n            );\n          },\n\n          // valueSetIndex(v ref, i int, x ref)\n          \"syscall/js.valueSetIndex\": sp => {\n            Reflect.set(\n              loadValue(sp + 8),\n              getInt64(sp + 16),\n              loadValue(sp + 24)\n            );\n          },\n\n          // func valueCall(v ref, m string, args []ref) (ref, bool)\n          \"syscall/js.valueCall\": sp => {\n            try {\n              const v = loadValue(sp + 8);\n              const m = Reflect.get(v, loadString(sp + 16));\n              const args = loadSliceOfValues(sp + 32);\n              const result = Reflect.apply(m, v, args);\n              sp = this._inst.exports.getsp(); // see comment above\n              storeValue(sp + 56, result);\n              mem().setUint8(sp + 64, 1);\n            } catch (err) {\n              storeValue(sp + 56, err);\n              mem().setUint8(sp + 64, 0);\n            }\n          },\n\n          // func valueInvoke(v ref, args []ref) (ref, bool)\n          \"syscall/js.valueInvoke\": sp => {\n            try {\n              const v = loadValue(sp + 8);\n              const args = loadSliceOfValues(sp + 16);\n              const result = Reflect.apply(v, undefined, args);\n              sp = this._inst.exports.getsp(); // see comment above\n              storeValue(sp + 40, result);\n              mem().setUint8(sp + 48, 1);\n            } catch (err) {\n              storeValue(sp + 40, err);\n              mem().setUint8(sp + 48, 0);\n            }\n          },\n\n          // func valueNew(v ref, args []ref) (ref, bool)\n          \"syscall/js.valueNew\": sp => {\n            try {\n              const v = loadValue(sp + 8);\n              const args = loadSliceOfValues(sp + 16);\n              const result = Reflect.construct(v, args);\n              sp = this._inst.exports.getsp(); // see comment above\n              storeValue(sp + 40, result);\n              mem().setUint8(sp + 48, 1);\n            } catch (err) {\n              storeValue(sp + 40, err);\n              mem().setUint8(sp + 48, 0);\n            }\n          },\n\n          // func valueLength(v ref) int\n          \"syscall/js.valueLength\": sp => {\n            setInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n          },\n\n          // valuePrepareString(v ref) (ref, int)\n          \"syscall/js.valuePrepareString\": sp => {\n            const str = encoder.encode(String(loadValue(sp + 8)));\n            storeValue(sp + 16, str);\n            setInt64(sp + 24, str.length);\n          },\n\n          // valueLoadString(v ref, b []byte)\n          \"syscall/js.valueLoadString\": sp => {\n            const str = loadValue(sp + 8);\n            loadSlice(sp + 16).set(str);\n          },\n\n          // func valueInstanceOf(v ref, t ref) bool\n          \"syscall/js.valueInstanceOf\": sp => {\n            mem().setUint8(\n              sp + 24,\n              loadValue(sp + 8) instanceof loadValue(sp + 16)\n            );\n          },\n\n          debug: value => {\n            console.log(value);\n          }\n        }\n      };\n    }\n\n    async run(instance) {\n      this._inst = instance;\n      this._values = [\n        // TODO: garbage collection\n        NaN,\n        0,\n        null,\n        true,\n        false,\n        global,\n        this._inst.exports.mem,\n        this\n      ];\n      this._refs = new Map();\n      this.exited = false;\n\n      const mem = new DataView(this._inst.exports.mem.buffer);\n\n      // Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n      let offset = 4096;\n\n      const strPtr = str => {\n        let ptr = offset;\n        new Uint8Array(mem.buffer, offset, str.length + 1).set(\n          encoder.encode(str + \"\\0\")\n        );\n        offset += str.length + (8 - (str.length % 8));\n        return ptr;\n      };\n\n      const argc = this.argv.length;\n\n      const argvPtrs = [];\n      this.argv.forEach(arg => {\n        argvPtrs.push(strPtr(arg));\n      });\n\n      const keys = Object.keys(this.env).sort();\n      argvPtrs.push(keys.length);\n      keys.forEach(key => {\n        argvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n      });\n\n      const argv = offset;\n      argvPtrs.forEach(ptr => {\n        mem.setUint32(offset, ptr, true);\n        mem.setUint32(offset + 4, 0, true);\n        offset += 8;\n      });\n\n      this._inst.exports.run(argc, argv);\n      if (this.exited) {\n        this._resolveExitPromise();\n      }\n      await this._exitPromise;\n    }\n\n    _resume() {\n      if (this.exited) {\n        throw new Error(\"Go program has already exited\");\n      }\n      this._inst.exports.resume();\n      if (this.exited) {\n        this._resolveExitPromise();\n      }\n    }\n\n    _makeFuncWrapper(id) {\n      const go = this;\n      return function() {\n        const event = { id: id, this: this, args: arguments };\n        go._pendingEvent = event;\n        go._resume();\n        return event.result;\n      };\n    }\n  };\n\n  if (isNodeJS) {\n    if (process.argv.length < 3) {\n      process.stderr.write(\n        \"usage: go_js_wasm_exec [wasm binary] [arguments]\\n\"\n      );\n      process.exit(1);\n    }\n\n    const go = new Go();\n    go.argv = process.argv.slice(2);\n    go.env = Object.assign({ TMPDIR: require(\"os\").tmpdir() }, process.env);\n    go.exit = process.exit;\n    WebAssembly.instantiate(fs.readFileSync(process.argv[2]), go.importObject)\n      .then(result => {\n        process.on(\"exit\", code => {\n          // Node.js exits if no event handler is pending\n          if (code === 0 && !go.exited) {\n            // deadlock, make Go print error and stack traces\n            go._pendingEvent = { id: 0 };\n            go._resume();\n          }\n        });\n        return go.run(result.instance);\n      })\n      .catch(err => {\n        throw err;\n      });\n  }\n})();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 202;","export function argMax(array: number[]) {\n  return array.map((x, i) => [x, i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1];\n}\n\nexport function zero2D(rows: number, cols: number) {\n  var array = [],\n    row = [];\n  while (cols--) row.push(0);\n  while (rows--) array.push(row.slice());\n  return array;\n}\n\nexport function array2D<T>(rows: number, cols: number, val: T) {\n  var array = [],\n    row = [];\n  while (cols--) row.push(val);\n  while (rows--) array.push(row.slice());\n  return array;\n}\n\nexport function randInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function transpose(matrix: number[][]) {\n  return matrix[0].map((_, j) => matrix.map((row) => row[j]));\n}\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function resizeCanvas(\n  canvasRef: React.RefObject<HTMLCanvasElement>,\n  width: number,\n  height: number\n) {\n  if (canvasRef.current) {\n    canvasRef.current.width = width * window.devicePixelRatio;\n    canvasRef.current.height = height * window.devicePixelRatio;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    if (ctx) {\n      ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    }\n  }\n}\n","import Env from \"../../common/envs/Env\";\nimport { argMax, randInt, zero2D } from \"../../common/util/helpers\";\nimport Agent from \"./Agent\";\n\nexport interface QLearningAgentUpdateData {\n  state: number;\n  action: number;\n  lr: number;\n  reward: number;\n  done: boolean;\n  gamma: number;\n  newState: number;\n  nextAction: number;\n  currentQ: number;\n  nextQ: number;\n}\n\nexport default class QLearningAgent implements Agent {\n  gamma: number;\n  lr: number;\n  eps: number;\n  epsDecay: number;\n  qTable?: number[][];\n\n  updateData?: QLearningAgentUpdateData;\n\n  constructor(options: any) {\n    options = {\n      gamma: 0.95,\n      lr: 0.1,\n      eps: 0.5,\n      epsDecay: 0.99,\n      ...options,\n    };\n    this.gamma = options.gamma;\n    this.lr = options.lr;\n    this.eps = options.eps;\n    this.epsDecay = options.epsDecay;\n  }\n\n  prepareForEnv(env: Env) {\n    this.qTable = zero2D(env.stateSpace!, env.actionSpace!);\n  }\n\n  getAction(state: number) {\n    if (this.qTable == null) {\n      console.error(\"Q learning agent not prepared\");\n      return;\n    }\n\n    if (Math.random() < this.eps) {\n      return randInt(0, this.qTable[0].length);\n    } else {\n      return argMax(this.qTable[state]);\n    }\n  }\n\n  update(\n    state: number,\n    action: number,\n    newState: number,\n    reward: number,\n    done: boolean\n  ) {\n    if (this.qTable == null) {\n      console.error(\"Q learning agent not prepared\");\n      return;\n    }\n\n    this.updateData = {\n      state,\n      action,\n      lr: this.lr,\n      reward,\n      done,\n      gamma: this.gamma,\n      newState,\n      nextAction: argMax(this.qTable[newState]),\n      currentQ: this.qTable[state][action],\n      nextQ: Math.max(...this.qTable[newState]),\n    };\n\n    this.qTable[state][action] +=\n      this.lr *\n      (reward +\n        (done ? 0 : this.gamma * Math.max(...this.qTable[newState])) -\n        this.qTable[state][action]);\n  }\n\n  finishEpisode() {\n    this.eps *= this.epsDecay;\n  }\n}\n","import Color from \"color\";\n\nexport const darkGray = Color.rgb(10, 10, 10);\nexport const gray = Color.rgb(110, 110, 110);\nexport const lightGray = Color.rgb(200, 200, 200);\nexport const veryLightGray = Color.rgb(224, 224, 224);\nexport const green = Color.rgb(186, 200, 146);\nexport const darkGreen = Color.rgb(78, 201, 176);\nexport const blue = Color.rgb(156, 220, 254);\nexport const darkBlue = Color.rgb(86, 156, 214);\nexport const red = Color.rgb(250, 138, 84);\nexport const purple = Color.rgb(197, 134, 192);\nexport const yellow = Color.rgb(220, 220, 170);\nexport const brown = Color.rgb(206, 145, 120);\nexport const orange = Color.rgb(255, 165, 0);\n\nexport const bgBrown = Color.rgb(54, 36, 17);\nexport const bgGreen = Color.rgb(17, 54, 31);\n\nexport const QLearningColors = {\n  state: purple,\n  nextState: darkBlue,\n  reward: yellow,\n  action: brown,\n  nextAction: darkGreen,\n  currentQ: bgBrown,\n  nextQ: bgGreen\n};\n","import katex from \"katex\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport * as colors from \"../../common/colors\";\n\nconst KatexDiv = styled.div<{ fontSize: number }>`\n  color: ${colors.lightGray.toString()};\n  font-size: ${(props) => props.fontSize}px;\n`;\n\ninterface KatexProps {\n  expression: string;\n  fontSize?: number;\n}\n\nconst Katex: React.FC<KatexProps> = (props) => {\n  const html = katex.renderToString(props.expression);\n  return (\n    <KatexDiv\n      fontSize={props.fontSize || 20}\n      dangerouslySetInnerHTML={{ __html: html }}\n    ></KatexDiv>\n  );\n};\n\nexport default Katex;\n","import Color from 'color';\n\nexport const colorbox = (color: Color, text: string) =>\n  String.raw`\\colorbox{${color.hex()}}{$${text}$}`;\n\nexport const textcolor = (color: Color, text: string) =>\n  String.raw`\\textcolor{${color.hex()}}{${text}}`;\n","import React from \"react\";\n\nimport { QLearningAgentUpdateData } from \"../agents/QLearningAgent\";\nimport { QLearningColors as colors } from \"../../common/colors\";\nimport Katex from \"../components/Katex\";\nimport { colorbox, textcolor } from \"../util/latex\";\nimport Position from \"../util/Position\";\n\ninterface BellmanUpdateKatexProps {\n  updateData?: QLearningAgentUpdateData;\n  position: Position;\n}\n\nconst BellmanUpdateKatex: React.FC<BellmanUpdateKatexProps> = (props) => {\n  const data = props.updateData;\n\n  if (data == null) {\n    return <></>;\n  }\n  const actionString = data.action\n    ? String.raw`\\text{left}`\n    : String.raw`\\text{right}`;\n  const nextActionString = data.nextAction\n    ? String.raw`\\text{left}`\n    : String.raw`\\text{right}`;\n\n  const Qsa = colorbox(\n    colors.currentQ,\n    String.raw`Q(${textcolor(colors.state, \"s\")}, ${textcolor(\n      colors.action,\n      \"a\"\n    )})`\n  );\n  const Qsa2 = colorbox(\n    colors.currentQ,\n    String.raw`Q(${textcolor(colors.state, data.state.toString())}, ${textcolor(\n      colors.action,\n      actionString\n    )})`\n  );\n  const Qsan = colorbox(\n    colors.nextQ,\n    String.raw`\\max_{${textcolor(colors.nextAction, \"a'\")}}Q(${textcolor(\n      colors.nextState,\n      \"s'\"\n    )}, ${textcolor(colors.nextAction, \"a'\")})`\n  );\n  const Qsan2 = colorbox(\n    colors.nextQ,\n    String.raw`Q(${textcolor(\n      colors.nextState,\n      data.newState.toString()\n    )}, ${textcolor(colors.nextAction, nextActionString.toString())})`\n  );\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        left: props.position.x,\n        top: props.position.y,\n      }}\n    >\n      <Katex\n        expression={String.raw`\n        \\begin{aligned}${Qsa} &\\leftarrow ${Qsa} + \\alpha(${textcolor(\n          colors.reward,\n          \"r\"\n        )} + \\gamma ${Qsan} - ${Qsa}) \\\\ \n        \n        ${Qsa2} &\\leftarrow ${Qsa2} + ${data.lr}(${textcolor(\n          colors.reward,\n          data.reward.toString()\n        )} + ${data.gamma} ${Qsan2} - ${Qsa2}) \\\\ \n        \n        ${Qsa2} &\\leftarrow ${colorbox(\n          colors.currentQ,\n          data.currentQ.toFixed(2)\n        )} + ${data.lr}(${textcolor(colors.reward, data.reward.toString())} + ${\n          data.gamma\n        } * ${colorbox(colors.nextQ, data.nextQ.toFixed(2))} - ${colorbox(\n          colors.currentQ,\n          data.currentQ.toFixed(2)\n        )}) \\\\\n\n        ${Qsa2} &\\leftarrow ${(\n          data.currentQ +\n          data.lr * (data.reward + data.gamma * data.nextQ - data.currentQ)\n        ).toFixed(2)}\n        \\end{aligned}`}\n      ></Katex>\n    </div>\n  );\n};\n\nexport default BellmanUpdateKatex;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport Position from \"../util/Position\";\nimport Katex from \"./Katex\";\n\nconst clickEffect = keyframes`\n    from {\n        background: rgba(255, 255, 255, .5);\n    }\n    to {\n        background: rgba(0, 0, 0, 0);\n    }\n`;\n\nconst ButtonDiv = styled.div`\n  position: fixed;\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  user-select: none;\n  animation: ${clickEffect} 0.3s ease-out 1;\n`;\n\nexport interface ButtonHandles {\n  click(): void;\n}\n\ninterface ButtonProps {\n  expression: string;\n  position: Position;\n  onClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\n}\n\nconst Button: React.RefForwardingComponent<ButtonHandles, ButtonProps> = (\n  props,\n  ref\n) => {\n  const buttonRef = React.useRef<HTMLDivElement>(null);\n  React.useImperativeHandle(ref, () => ({\n    click: () => {\n      if (buttonRef.current) {\n        buttonRef.current.style.animation = \"none\";\n        void buttonRef.current.offsetWidth;\n        buttonRef.current.style.animation = \"\";\n      }\n    },\n  }));\n  return (\n    <ButtonDiv\n      style={{\n        left: props.position.x,\n        top: props.position.y,\n        animation: \"none\",\n      }}\n      onClick={props.onClick}\n      ref={buttonRef}\n    >\n      <Katex fontSize={16} expression={props.expression}></Katex>\n    </ButtonDiv>\n  );\n};\n\nexport default React.forwardRef(Button);\n","import Env from \"../../common/envs/Env\";\n\nexport default class NChainEnv implements Env {\n  n: number;\n  slip: number;\n  small: number;\n  large: number;\n  episode_length: number;\n  state: number;\n  stepCount: number;\n\n  stateSpace: number;\n  actionSpace: number;\n\n  constructor(n = 5, slip = 0.2, small = 2, large = 10, episode_length = 100) {\n    this.n = n;\n    this.slip = slip;\n    this.small = small;\n    this.large = large;\n    this.episode_length = episode_length;\n    this.state = 0;\n    this.stepCount = 0;\n\n    this.stateSpace = n;\n    this.actionSpace = 2;\n  }\n\n  step(action: boolean) {\n    let slipped = false;\n    if (Math.random() < this.slip) {\n      action = !action;\n      slipped = true;\n    }\n    let reward = 0;\n    if (action) {\n      // 'backwards': go back to the beginning, get small reward\n      reward = this.small;\n      this.state = 0;\n    } else if (this.state < this.n - 1) {\n      // 'forwards': go up along the chain\n      this.state += 1;\n    } else {\n      // 'forwards': stay at the end of the chain, collect large reward\n      reward = this.large;\n    }\n    this.stepCount += 1;\n    console.log(this.stepCount);\n    return {\n      newState: this.state,\n      reward: reward,\n      done: this.stepCount >= this.episode_length,\n      info: { slipped },\n    };\n  }\n\n  reset() {\n    this.state = 0;\n    this.stepCount = 0;\n    return this.state;\n  }\n}\n","import Agent from \"./agents/Agent\";\nimport Env from \"../common/envs/Env\";\n\nexport default class Game {\n  env: Env;\n  agent: Agent;\n  state!: number;\n  prevState?: number;\n  lastReward?: number;\n  totalReward: number = 0;\n  lastAction: any;\n\n  constructor(env: Env, agent: Agent) {\n    this.env = env;\n    this.agent = agent;\n    this.reset();\n  }\n\n  reset() {\n    this.state = this.env.reset() as number;\n    this.prevState = undefined;\n    this.totalReward = 0;\n  }\n\n  agentTakeAction(action: any) {\n    const { newState, reward, done, info } = this.env.step(action);\n    this.lastAction = action;\n    this.lastReward = reward;\n    this.totalReward += reward;\n    this.agent.update(this.state, action, newState, reward, done);\n    this.prevState = this.state;\n    this.state = newState;\n    const totalReward = this.totalReward;\n    if (done) {\n      this.agent.finishEpisode();\n      this.reset();\n    }\n    return { action, newState, reward, done, totalReward, info };\n  }\n\n  step() {\n    const action = this.agent.getAction(this.state);\n    return this.agentTakeAction(action);\n  }\n}\n","import TWEEN from \"@tweenjs/tween.js\";\nimport { darkGray } from \"../common/colors\";\n\nexport default class Scene {\n  constructor(canvas, ctx, size, sceneObjects) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.size = size;\n    this.sceneObjects = sceneObjects;\n  }\n\n  render() {\n    requestAnimationFrame(this.render.bind(this));\n\n    this.ctx.fillStyle = darkGray;\n    this.ctx.fillRect(0, 0, this.size.width, this.size.height);\n    this.sceneObjects.forEach((obj) => {\n      obj.render(this.ctx, this.size);\n    });\n\n    TWEEN.update();\n  }\n}\n","import TWEEN from \"@tweenjs/tween.js\";\n\nimport * as colors from \"../../common/colors\";\nimport Position from \"../util/Position\";\nimport SceneObject from \"./SceneObject\";\n\nexport default class AgentObject implements SceneObject {\n  position: Position;\n  redness: number;\n  constructor(position: Position) {\n    this.position = position;\n    this.redness = 0;\n  }\n\n  move(newX: number) {\n    new TWEEN.Tween(this.position).to({ x: newX }, 150).start();\n  }\n\n  slip() {\n    this.redness = 1;\n    new TWEEN.Tween(this).to({ redness: 0 }, 500).start();\n  }\n\n  render(ctx: any) {\n    ctx.fillStyle = colors.blue;\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, 20, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.fillStyle = colors.red.fade(1 - this.redness);\n    ctx.fill();\n  }\n}\n","import * as colors from \"../../common/colors\";\n\nexport default class ChainEnvironment {\n  RADIUS = 30;\n  DIST = 100;\n\n  constructor(position) {\n    this.position = position;\n  }\n\n  highlightStates(states) {\n    this.highlightedStates = states;\n  }\n\n  render(ctx) {\n    ctx.strokeStyle = colors.gray;\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    for (let i = 0; i < 5; i++) {\n      if (i < 4) {\n        ctx.beginPath();\n        ctx.moveTo(\n          this.position.x + this.DIST * (i - 2) + this.RADIUS,\n          this.position.y\n        );\n        ctx.lineTo(\n          this.position.x + this.DIST * (i - 1) - this.RADIUS,\n          this.position.y\n        );\n      }\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.arc(\n        this.position.x + this.DIST * (i - 2),\n        this.position.y,\n        this.RADIUS,\n        0,\n        2 * Math.PI\n      );\n      ctx.stroke();\n      ctx.font = \"16px KaTeX_Main\";\n      ctx.fillStyle = colors.gray.toString();\n      ctx.textAlign = \"center\";\n      ctx.fillText(\n        i,\n        this.position.x + this.DIST * (i - 2),\n        this.position.y + 4\n      );\n    }\n    if (this.highlightedStates) {\n      this.highlightedStates.forEach((state) => {\n        ctx.beginPath();\n        ctx.strokeStyle = state.color.toString();\n        ctx.arc(\n          this.position.x + this.DIST * (state.index - 2),\n          this.position.y,\n          this.RADIUS,\n          0,\n          2 * Math.PI\n        );\n        ctx.stroke();\n\n        ctx.font = \"16px KaTeX_Main\";\n        ctx.fillStyle = state.color.toString();\n        ctx.textAlign = \"center\";\n        ctx.fillText(\n          state.index,\n          this.position.x + this.DIST * (state.index - 2),\n          this.position.y + 4\n        );\n      });\n    }\n  }\n}\n","import TWEEN from \"@tweenjs/tween.js\";\n\nimport * as colors from \"../../common/colors\";\nimport Position from \"../util/Position\";\nimport SceneObject from \"./SceneObject\";\n\ninterface Coin {\n  position: Position;\n  opacity: { val: number };\n  fading: boolean;\n}\n\nexport default class CoinEmitter implements SceneObject {\n  coins = new Set<Coin>();\n  emit(start: Position, end: Position, delay: number = 0) {\n    const coin: Coin = {\n      position: start,\n      opacity: { val: 0 },\n      fading: false,\n    };\n    this.coins.add(coin);\n    new TWEEN.Tween(coin.position)\n      .delay(delay)\n      .to(end, 200)\n      .easing(TWEEN.Easing.Cubic.Out)\n      .start();\n    new TWEEN.Tween(coin.opacity)\n      .delay(delay)\n      .to({ val: 0.8 }, 200)\n      .easing(TWEEN.Easing.Cubic.Out)\n      .start();\n  }\n  clear() {\n    this.coins.forEach((coin) => {\n      if (!coin.fading) {\n        new TWEEN.Tween(coin.opacity)\n          .delay(250)\n          .to({ val: 0 }, 400)\n          .onComplete(() => this.coins.delete(coin))\n          .start();\n        coin.fading = true;\n      }\n    });\n  }\n  render(ctx: CanvasRenderingContext2D) {\n    this.coins.forEach((coin) => {\n      ctx.beginPath();\n      ctx.fillStyle = colors.QLearningColors.reward\n        .fade(1 - coin.opacity.val)\n        .toString();\n      ctx.arc(coin.position.x, coin.position.y, 6, 0, 2 * Math.PI);\n      ctx.fill();\n    });\n  }\n}\n","import * as colors from \"../../common/colors\";\nimport TWEEN from \"@tweenjs/tween.js\";\n\nexport default class NumberObject {\n  constructor(position, val, options) {\n    options = {\n      font: \"30px KaTeX_Main\",\n      textAlign: \"center\",\n      precision: 2,\n      color: colors.lightGray,\n      modifier: (v) => v,\n      ...options,\n    };\n\n    this.position = position;\n    this.val = val;\n    this.font = options.font;\n    this.textAlign = options.textAlign;\n    this.precision = options.precision;\n    this.modifier = options.modifier;\n    this.color = options.color;\n    this.newVal = 0;\n    this.newValColor = colors.red;\n    this.newValOpacity = 0;\n    this.newValOffset = 0;\n    this.valOpacity = 1;\n    this.valOffset = 0;\n  }\n\n  onAnimationFinish() {\n    this.activeTween = new TWEEN.Tween(this)\n      .to({ newValOpacity: 0 }, 2000)\n      .start();\n    this.valOpacity = 1;\n    this.valOffset = 0;\n    this.val = this.newVal;\n  }\n\n  updateVal(newVal, animated = true, animationDuration = 400) {\n    if (newVal === this.newVal) {\n      return;\n    }\n    if (this.activeTween) {\n      this.activeTween.stop();\n    }\n\n    if (!animated) {\n      this.val = newVal;\n      this.newVal = newVal;\n    }\n\n    if (newVal > this.val) {\n      this.val = this.newVal;\n      this.newVal = newVal;\n      this.newValColor = colors.green;\n      this.valOpacity = 1;\n      this.newValOpacity = 0;\n      this.valOffset = 0;\n      this.newValOffset = -25;\n      this.activeTween = new TWEEN.Tween(this)\n        .to(\n          {\n            valOpacity: 0,\n            newValOpacity: 1,\n            valOffset: 25,\n            newValOffset: 0,\n          },\n          animationDuration\n        )\n        .onStop(this.onAnimationFinish.bind(this))\n        .onComplete(this.onAnimationFinish.bind(this))\n        .start();\n    } else if (newVal < this.val) {\n      this.val = this.newVal;\n      this.newVal = newVal;\n      this.newValColor = colors.red;\n      this.valOpacity = 1;\n      this.newValOpacity = 0;\n      this.valOffset = 0;\n      this.newValOffset = 25;\n      this.activeTween = new TWEEN.Tween(this)\n        .to(\n          {\n            valOpacity: 0,\n            newValOpacity: 1,\n            valOffset: -25,\n            newValOffset: 0,\n          },\n          animationDuration\n        )\n        .onStop(this.onAnimationFinish.bind(this))\n        .onComplete(this.onAnimationFinish.bind(this))\n        .start();\n    }\n  }\n\n  render(ctx) {\n    ctx.textAlign = this.textAlign;\n    ctx.font = this.font;\n    ctx.fillStyle = this.color.fade(1 - this.valOpacity);\n    if (this.val != null) {\n      ctx.fillText(\n        this.modifier(this.val.toFixed(this.precision)),\n        this.position.x,\n        this.position.y + this.valOffset\n      );\n    }\n    ctx.fillStyle = this.newValColor.fade(1 - this.newValOpacity);\n    if (this.newVal != null) {\n      ctx.fillText(\n        this.modifier(this.newVal.toFixed(this.precision)),\n        this.position.x,\n        this.position.y + this.newValOffset\n      );\n    }\n  }\n}\n","import * as colors from \"../../common/colors\";\nimport Position from \"../util/Position\";\nimport NumberObject from \"./NumberObject\";\n\nexport default class Table {\n  CELL_WIDTH = 120;\n  CELL_HEIGHT = 70;\n\n  numberObjects: NumberObject[][];\n  position: Position;\n  highlightedCells: any[] = [];\n\n  constructor(position: Position, data: number[][]) {\n    this.position = position;\n    this.numberObjects = [];\n    for (let i = 0; i < data.length; i++) {\n      const temp = [];\n      for (let j = 0; j < data[0].length; j++) {\n        temp.push(new NumberObject(0, 0, data[i][j]));\n      }\n      this.numberObjects.push(temp);\n    }\n  }\n\n  updateData(newData: number[][]) {\n    for (let i = 0; i < this.numberObjects.length; i++) {\n      for (let j = 0; j < this.numberObjects[0].length; j++) {\n        this.numberObjects[i][j].updateVal(newData[i][j]);\n      }\n    }\n  }\n\n  highlightCells(cells: any[]) {\n    this.highlightedCells = cells;\n  }\n\n  repositionNumbers() {\n    for (let i = 0; i < this.numberObjects.length; i++) {\n      for (let j = 0; j < this.numberObjects[0].length; j++) {\n        this.numberObjects[i][j].position = {\n          x: this.position.x + this.CELL_WIDTH * (j + 1 / 2),\n          y: this.position.y + 45 + this.CELL_HEIGHT * i,\n        };\n      }\n    }\n  }\n\n  render(ctx: CanvasRenderingContext2D) {\n    ctx.lineWidth = 1;\n    this.repositionNumbers();\n    if (this.highlightedCells) {\n      this.highlightedCells.forEach((cell) => {\n        ctx.beginPath();\n        ctx.fillStyle = cell.color;\n        ctx.fillRect(\n          this.position.x + this.CELL_WIDTH * cell.col,\n          this.position.y + this.CELL_HEIGHT * cell.row,\n          this.CELL_WIDTH,\n          this.CELL_HEIGHT\n        );\n      });\n    }\n    for (let i = 0; i < this.numberObjects.length; i++) {\n      for (let j = 0; j < this.numberObjects[0].length; j++) {\n        ctx.beginPath();\n        ctx.rect(\n          this.position.x + this.CELL_WIDTH * j,\n          this.position.y + this.CELL_HEIGHT * i,\n          this.CELL_WIDTH,\n          this.CELL_HEIGHT\n        );\n        ctx.strokeStyle = colors.gray.toString();\n        ctx.stroke();\n        this.numberObjects[i][j].render(ctx);\n      }\n    }\n  }\n}\n","import React from \"react\";\n\n// Hook\nexport default function useWindowSize() {\n  const isClient = typeof window === \"object\";\n\n  const getSize = React.useCallback(() => {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }, [isClient]);\n\n  const [windowSize, setWindowSize] = React.useState(getSize);\n\n  React.useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [getSize, setWindowSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n","import \"react-dat-gui/build/react-dat-gui.css\";\n\nimport React from \"react\";\nimport DatGui, { DatBoolean, DatButton, DatNumber } from \"react-dat-gui\";\nimport styled from \"styled-components\";\n\nimport QLearningAgent from \"../agents/QLearningAgent\";\nimport * as colors from \"../../common/colors\";\nimport BellmanUpdateKatex from \"../components/BellmanUpdateKatex\";\nimport Button, { ButtonHandles } from \"../components/Button\";\nimport NChainEnv from \"../envs/NChain\";\nimport Game from \"../Game\";\nimport useStaging from \"../hooks/useStaging\";\nimport Scene from \"../Scene\";\nimport AgentObject from \"../scene-objects/AgentObject\";\nimport ChainEnvironment from \"../scene-objects/ChainEnvironment\";\nimport CoinEmitter from \"../scene-objects/CoinEmitter\";\nimport NumberObject from \"../scene-objects/NumberObject\";\nimport Table from \"../scene-objects/Table\";\nimport { transpose, resizeCanvas } from \"../../common/util/helpers\";\nimport { textcolor } from \"../util/latex\";\nimport useWindowSize from \"../../common/util/useWindowSize\";\n\nconst initialAgentOptions = {\n  gamma: 0.95,\n  lr: 0.1,\n  eps: 0.5,\n  epsDecay: 0.99,\n};\n\nconst glob = {\n  envY: 180,\n  centerX: 450,\n};\n\nconst env = new NChainEnv();\nconst agent = new QLearningAgent(initialAgentOptions);\nagent.prepareForEnv(env);\nconst game = new Game(env, agent);\n\nconst rewardNumberObject = new NumberObject(\n  { x: glob.centerX, y: glob.envY - 72 },\n  0,\n  {\n    textAlign: \"center\",\n    font: \"40px KaTeX_Main\",\n    precision: 0,\n  }\n);\n// const lastRewardNumberObject = new NumberObject(\n//   { x: glob.centerX, y: glob.envY - 100 },\n//   undefined,\n//   {\n//     textAlign: \"center\",\n//     font: \"20px KaTeX_Main\",\n//     precision: 0,\n//     color: colors.yellow,\n//     modifier: (v: number) => \"+\" + v\n//   }\n// );\n// const bestRewardNumberObject = new NumberObject(\n//   { x: glob.centerX, y: glob.envY - 50 },\n//   0,\n//   {\n//     textAlign: \"center\",\n//     font: \"20px KaTeX_Main\",\n//     precision: 0,\n//     modifier: (v: number) => \"Best: \" + v\n//   }\n// );\nconst envObject = new ChainEnvironment({\n  x: glob.centerX,\n  y: glob.envY,\n});\nconst coinEmitter = new CoinEmitter();\nconst agentObject = new AgentObject({\n  x: glob.centerX - 2 * envObject.DIST,\n  y: glob.envY,\n});\nconst tableObject = new Table(\n  { x: glob.centerX - envObject.DIST * 2.5, y: glob.envY + 55 },\n  transpose(agent.qTable!)\n);\ntableObject.CELL_WIDTH = envObject.DIST;\n\nconst Page = styled.div`\n  background-color: ${colors.darkGray.toString()};\n`;\n\nfunction QLearningPage() {\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const sceneRef = React.useRef<Scene>();\n  const size = useWindowSize();\n\n  const [stepCount, setStepCount] = React.useState(0);\n  const [options, setOptions] = React.useState({\n    autoPlay: false,\n    ...initialAgentOptions,\n  });\n\n  //   const takeAction = action => {\n  //     const { newState, reward } = env.step(action);\n  //     console.log(\"new state\", newState);\n  //     setState(newState);\n  //   };\n\n  useStaging([\n    () => {\n      window.alert(\"hello world\");\n    },\n    () => {\n      window.alert(\"hello world 2\");\n    },\n  ]);\n\n  const agentTookAction = (\n    action: any,\n    done: boolean,\n    totalReward: number,\n    info: any\n  ) => {\n    if (action) {\n      if (leftButtonRef.current) {\n        leftButtonRef.current.click();\n      }\n    } else {\n      if (rightButtonRef.current) {\n        rightButtonRef.current.click();\n      }\n    }\n    if (info.slipped) {\n      agentObject.slip();\n    }\n    if (done) {\n      // if (totalReward > bestRewardNumberObject.val) {\n      //   bestRewardNumberObject.updateVal(totalReward);\n      // }\n      setOptions({ ...options, eps: agent.eps });\n    }\n    setStepCount(stepCount + 1);\n  };\n\n  const step = () => {\n    const { action, done, totalReward, info } = game.step();\n    agentTookAction(action, done, totalReward, info);\n  };\n\n  const handleKeyDown = (e: any) => {\n    if (e.keyCode === 39) {\n      // right arrow\n      e.preventDefault();\n      const { done, totalReward, info } = game.agentTakeAction(0);\n      agentTookAction(0, done, totalReward, info);\n    }\n    if (e.keyCode === 37) {\n      // left arrow\n      e.preventDefault();\n      const { done, totalReward, info } = game.agentTakeAction(1);\n      agentTookAction(1, done, totalReward, info);\n    }\n  };\n\n  const handleUpdate = (data: any) => {\n    setOptions(data);\n  };\n\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas && canvas.getContext(\"2d\");\n    if (size.width && size.height) {\n      resizeCanvas(canvasRef, size.width, size.height);\n    }\n\n    sceneRef.current = new Scene(canvas, ctx, size, [\n      coinEmitter,\n      envObject,\n      tableObject,\n      agentObject,\n      rewardNumberObject,\n      // bestRewardNumberObject,\n      // lastRewardNumberObject,\n    ]);\n\n    sceneRef.current.render();\n  }, [size]);\n\n  React.useEffect(() => {\n    game.reset();\n  }, []);\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  if (options.autoPlay) {\n    window.setTimeout(step, 200);\n  }\n\n  agent.gamma = options.gamma;\n  agent.lr = options.lr;\n  agent.eps = options.eps;\n  agent.epsDecay = options.epsDecay;\n\n  if (size.width && size.height) {\n    resizeCanvas(canvasRef, size.width, size.height);\n  }\n\n  agentObject.move(glob.centerX + envObject.DIST * ((game.state || 0) - 2));\n\n  window.setTimeout(() => {\n    if (agent.qTable) {\n      tableObject.updateData(transpose(agent.qTable));\n    }\n  }, 500);\n\n  window.setTimeout(() => {\n    rewardNumberObject.updateVal(game.totalReward);\n  }, 150);\n\n  // lastRewardNumberObject.updateVal(game.lastReward, false);\n  coinEmitter.clear();\n  if (game.lastReward) {\n    const startX =\n      game.lastReward === 2\n        ? glob.centerX - 2 * envObject.DIST\n        : glob.centerX + 2 * envObject.DIST;\n\n    for (let i = 0; i < game.lastReward; i++) {\n      const angle = Math.random() * 2 * Math.PI;\n      const radius = 40;\n      coinEmitter.emit(\n        { x: startX, y: glob.envY },\n        {\n          x: glob.centerX + radius * Math.cos(angle),\n          y: glob.envY - 85 + radius * Math.sin(angle),\n        },\n        150 + i * 10\n      );\n    }\n  }\n\n  if (agent.updateData) {\n    tableObject.highlightCells([\n      {\n        row: agent.updateData.action,\n        col: agent.updateData.state,\n        color: colors.QLearningColors.currentQ,\n      },\n      {\n        row: agent.updateData.nextAction,\n        col: agent.updateData.newState,\n        color: colors.QLearningColors.nextQ,\n      },\n    ]);\n\n    envObject.highlightStates([\n      {\n        index: agent.updateData.state,\n        color: colors.QLearningColors.state,\n      },\n      {\n        index: agent.updateData.newState,\n        color: colors.QLearningColors.nextState,\n      },\n    ]);\n  }\n\n  const rightButtonRef = React.useRef<ButtonHandles>(null);\n  const leftButtonRef = React.useRef<ButtonHandles>(null);\n\n  return (\n    <Page>\n      <DatGui data={options} onUpdate={handleUpdate}>\n        <DatNumber\n          path=\"lr\"\n          label=\"Learning rate (α)\"\n          min={0}\n          max={1}\n          step={0.01}\n        />\n        <DatNumber\n          path=\"eps\"\n          label=\"Rnd chance (ε)\"\n          min={0}\n          max={1}\n          step={0.01}\n        />\n        <DatNumber\n          path=\"gamma\"\n          label=\"Discount rate (γ)\"\n          min={0}\n          max={1}\n          step={0.01}\n        ></DatNumber>\n        <DatNumber\n          path=\"epsDecay\"\n          label=\"ε decay\"\n          min={0}\n          max={1}\n          step={0.01}\n        ></DatNumber>\n        <DatBoolean path=\"autoPlay\" label=\"Auto-play\"></DatBoolean>\n        <DatButton label=\"Step\" onClick={step} />\n      </DatGui>\n      <canvas\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          background: \"black\",\n        }}\n        ref={canvasRef}\n      />\n      <BellmanUpdateKatex\n        updateData={agent.updateData}\n        position={{\n          x: glob.centerX - tableObject.CELL_WIDTH * 3 - 12,\n          y: tableObject.position.y + tableObject.CELL_HEIGHT * 2 + 30,\n        }}\n      ></BellmanUpdateKatex>\n      <Button\n        ref={rightButtonRef}\n        expression={textcolor(\n          agent.updateData && agent.updateData.action === 0\n            ? colors.QLearningColors.action\n            : agent.updateData && agent.updateData.nextAction === 0\n            ? colors.QLearningColors.nextAction\n            : colors.lightGray,\n          String.raw`\\text{right}`\n        )}\n        position={{\n          x: glob.centerX - tableObject.CELL_WIDTH * 3 - 20,\n          y: tableObject.position.y + 20,\n        }}\n        onClick={() => {\n          const { done, totalReward, info } = game.agentTakeAction(0);\n          agentTookAction(0, done, totalReward, info);\n        }}\n      ></Button>\n      <Button\n        ref={leftButtonRef}\n        expression={textcolor(\n          agent.updateData && agent.updateData.action === 1\n            ? colors.QLearningColors.action\n            : agent.updateData && agent.updateData.nextAction === 1\n            ? colors.QLearningColors.nextAction\n            : colors.lightGray,\n          String.raw`\\text{left}`\n        )}\n        position={{\n          x: glob.centerX - tableObject.CELL_WIDTH * 3 - 20,\n          y: tableObject.position.y + tableObject.CELL_HEIGHT * 1 + 20,\n        }}\n        onClick={() => {\n          const { done, totalReward, info } = game.agentTakeAction(1);\n          agentTookAction(1, done, totalReward, info);\n        }}\n      ></Button>\n      {/* <AspectRatioBox></AspectRatioBox> */}\n    </Page>\n  );\n}\n\nexport default QLearningPage;\n","import React from \"react\";\n\ntype Stage = () => void;\n\nexport default function useStaging(stages: Stage[]) {\n  const [stage, setStage] = React.useState(0);\n  React.useEffect(() => {\n    window.addEventListener(\"keypress\", e => {\n      switch (e.keyCode) {\n        case 110:\n          // n\n          stages[stage]();\n          if (stage < stages.length - 1) {\n            setStage(stage + 1);\n          }\n          break;\n      }\n    });\n  });\n  return [stage, setStage];\n}\n","import Env from \"../../common/envs/Env\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nexport default class SnakeEnv implements Env {\n  boardSize: number;\n  foodReward: number;\n  deathReward: number;\n\n  player!: tf.Tensor2D;\n  food!: tf.Tensor1D;\n\n  constructor(boardSize = 9, foodReward = 2, deathReward = -1) {\n    this.boardSize = boardSize;\n    this.foodReward = foodReward;\n    this.deathReward = deathReward;\n\n    this.reset();\n  }\n\n  playerOnFood() {\n    return (\n      this.player\n        .gather(this.player.shape[0])\n        .equal(this.food)\n        .sum()\n        .bufferSync()\n        .get(0) === 2\n    );\n  }\n\n  playerOutOfBounds() {\n    const buffer = this.player.bufferSync();\n    const x = buffer.get(this.player.shape[0] - 1, 0);\n    const y = buffer.get(this.player.shape[0] - 1, 1);\n    const outOfBounds = !(\n      0 <= x &&\n      x < this.boardSize &&\n      0 <= y &&\n      y < this.boardSize\n    );\n    if (outOfBounds) {\n      console.log(\"snake went out of bounds\");\n    }\n    return outOfBounds;\n  }\n\n  collidedWithTail() {\n    const [tail, head] = tf.split(this.player, [this.player.shape[0] - 1, 1]);\n    const collidedWithTail =\n      tf.sum(tail.equal(head), 1).max().bufferSync().get(0) === 2;\n    if (collidedWithTail) {\n      console.log(\"snake collided with tail\");\n    }\n    return collidedWithTail;\n  }\n\n  step(action: number) {\n    if (action == null) {\n      console.log(\"Error: action was undefined in SnakeEnv!\", action);\n    }\n\n    const currentPosition = this.player.gather(this.player.shape[0] - 1);\n\n    const actionUpdateMap = [\n      tf.tensor1d([0, -1]),\n      tf.tensor1d([1, 0]),\n      tf.tensor1d([0, 1]),\n      tf.tensor1d([-1, 0]),\n    ];\n\n    const newPosition: tf.Tensor1D = currentPosition.add(\n      actionUpdateMap[action]\n    );\n\n    this.player = this.player.concat(newPosition.reshape([1, 2]));\n\n    let reward = 0;\n\n    if (this.playerOnFood()) {\n      reward = this.foodReward;\n      this.randomizeFood();\n    } else {\n      const [, allButLast] = tf.split(this.player, [\n        1,\n        this.player.shape[0] - 1,\n      ]);\n      this.player = allButLast;\n    }\n\n    let done = false;\n    if (this.playerOutOfBounds() || this.collidedWithTail()) {\n      done = true;\n      reward = this.deathReward;\n    }\n\n    if (done) {\n      return {\n        newObservation: tf.zeros([this.boardSize, this.boardSize, 3]),\n        reward,\n        done,\n      };\n    }\n\n    return {\n      newObservation: this.getObservation(),\n      reward,\n      done,\n    };\n  }\n\n  getObservation() {\n    const foodEntry = this.food.reverse().concat(tf.tensor1d([0]));\n    const playerEntries = this.player.reverse(1).concat(\n      tf\n        .fill([this.player.shape[0] - 1], 2)\n        .concat(tf.tensor1d([1]))\n        .reshape([this.player.shape[0], 1]),\n      1\n    );\n    const updates = foodEntry.reshape([1, 3]).concat(playerEntries);\n    const values = tf\n      .tensor1d([1])\n      .concat(tf.range(1, this.player.shape[0]))\n      .concat(tf.tensor1d([1]));\n    return tf.scatterND(updates, values, [this.boardSize, this.boardSize, 3]);\n  }\n\n  randomizeFood() {\n    while (true) {\n      this.food = tf.randomUniform([2], 0, this.boardSize, \"int32\");\n      if (\n        tf.sum(this.player.equal(this.food), 1).max().bufferSync().get(0) !== 2\n      ) {\n        break;\n      }\n    }\n  }\n\n  reset() {\n    this.player = tf.randomUniform([1, 2], 0, this.boardSize, \"int32\");\n    this.randomizeFood();\n    return this.getObservation();\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport classNames from \"classnames\";\nimport SnakeEnv from \"../envs/SnakeEnv\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { green, red } from \"../../common/colors\";\nimport * as _ from \"lodash\";\nimport { sleep } from \"../../common/util/helpers\";\n\nconst SnakeRendererDiv = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  .row {\n    display: flex;\n    justify-content: center;\n    height: 60px;\n  }\n  .cell {\n    width: 60px;\n    height: 100%;\n    &.food {\n      background: ${red.desaturate(0.3).hex()};\n    }\n    &.snake,\n    &.tail {\n      background: ${green.desaturate(0.5).hex()};\n    }\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n    .row {\n      height: ${100 / 9}vw;\n    }\n    .cell {\n      width: ${100 / 9}vw;\n    }\n  }\n`;\n\nconst env = new SnakeEnv();\nconst obs = env.getObservation();\n\nconst snakeGlobals = {\n  stopRunning: false,\n  disableInput: false,\n  modelUpdating: false,\n};\n\nconst SnakeRenderer: React.FC = (props) => {\n  const [observation, setObservation] = React.useState(obs);\n  const [totalReward, setTotalReward] = React.useState(0);\n  console.log(\"Total reward:\", totalReward);\n\n  async function updateModel(\n    model: tf.LayersModel,\n    obs: tf.Tensor,\n    action: number,\n    newObs: tf.Tensor,\n    reward: number,\n    done: boolean\n  ) {\n    // This is like a mutex lock, except it gives up if the thread is busy.\n    // Also, it doesn't necessarily work; if two threads enter at exactly the\n    // same time they may both go through. But it hasn't happened yet afaik.\n    if (snakeGlobals.modelUpdating) {\n      return;\n    }\n    snakeGlobals.modelUpdating = true;\n\n    const prediction = model.predict(obs.reshape([1, 9, 9, 3])) as tf.Tensor;\n    const nextRewardPrediction = model.predict(\n      newObs.reshape([1, 9, 9, 3])\n    ) as tf.Tensor;\n    const targetActionScore =\n      reward +\n      (done ? 0 : 0.95 * (nextRewardPrediction.max().arraySync() as number));\n    const label = prediction.bufferSync();\n    label.set(targetActionScore, 0, action);\n    await model.fit(obs.reshape([1, 9, 9, 3]), label.toTensor(), {\n      epochs: 1,\n    });\n\n    snakeGlobals.modelUpdating = false;\n  }\n\n  React.useEffect(() => {\n    async function runModel(model: tf.LayersModel) {\n      for (let i = 0; ; i++) {\n        let done = false;\n        let obs: tf.Tensor;\n        if (i === 0) {\n          obs = env.getObservation();\n        } else {\n          obs = env.reset();\n        }\n        while (!done) {\n          if (snakeGlobals.stopRunning) {\n            return;\n          }\n          const prediction = model.predict(\n            obs.reshape([1, 9, 9, 3])\n          ) as tf.Tensor;\n          const action = (prediction.argMax(1).arraySync() as number[])[0];\n          if (action == null) {\n            // Sometimes action is undefined for some mysterious reason.\n            // I'm hoping this can catch that one day.\n            console.log(\"Error: action was undefined in runModel!\", action);\n            console.log(\"observation:\");\n            obs.print();\n            console.log(\"prediction:\");\n            prediction.print();\n            console.log(\"argmax:\");\n            console.log(prediction.argMax(1));\n          }\n          const { newObservation, reward, done: newDone } = env.step(action);\n          setObservation(newObservation);\n          setTotalReward((totalReward) => totalReward + reward);\n\n          await updateModel(model, obs, action, newObservation, reward, done);\n\n          done = newDone;\n          obs = newObservation;\n          await sleep(300);\n        }\n      }\n    }\n\n    const runModelDebounced = _.debounce((model: tf.LayersModel) => {\n      snakeGlobals.stopRunning = false;\n      snakeGlobals.disableInput = false;\n      runModel(model);\n    }, 600);\n\n    tf.loadLayersModel(\"/models/snake/model.json\").then((model) => {\n      model.compile({ optimizer: \"adam\", loss: \"meanSquaredError\" });\n      runModel(model);\n\n      // TODO: cleanup this listener. Not sure how to because the listener\n      // is a closure that takes in model.\n      window.addEventListener(\"keydown\", (e) => {\n        if (snakeGlobals.disableInput) {\n          return;\n        }\n        const obs = env.getObservation();\n        const keyToActionMap: { [key: string]: number } = {\n          ArrowUp: 0,\n          ArrowRight: 1,\n          ArrowDown: 2,\n          ArrowLeft: 3,\n        };\n        if (!(e.key in keyToActionMap)) {\n          return;\n        }\n        const action = keyToActionMap[e.key];\n        const { newObservation, reward, done: newDone } = env.step(action);\n        setObservation(newObservation);\n        snakeGlobals.stopRunning = true;\n\n        updateModel(model, obs, action, newObservation, reward, newDone);\n\n        if (newDone) {\n          snakeGlobals.disableInput = true;\n          env.reset();\n        }\n\n        runModelDebounced(model);\n      });\n    });\n  }, []);\n\n  const obsArray = observation.arraySync() as number[][][];\n\n  return (\n    <SnakeRendererDiv>\n      {obsArray.map((row, i) => (\n        <div className=\"row\" key={i}>\n          {row.map((cell, i) => {\n            const food = cell[0] === 1;\n            const snake = cell[1] === 1;\n            const tail = cell[2] > 0;\n            return (\n              <div\n                key={i}\n                className={classNames(\"cell\", {\n                  food,\n                  snake,\n                  tail,\n                })}\n                style={{\n                  opacity: food\n                    ? 0.3\n                    : snake\n                    ? 0.4\n                    : tail\n                    ? 0.1 + (0.3 * (cell[2] - 1)) / (env.player.shape[0] - 1)\n                    : 0,\n                }}\n              ></div>\n            );\n          })}\n        </div>\n      ))}\n    </SnakeRendererDiv>\n  );\n};\n\nexport default SnakeRenderer;\n","import { Mino } from \"./types\";\nimport {\n  red,\n  green,\n  darkBlue,\n  orange,\n  purple,\n  yellow,\n  blue,\n} from \"../common/colors\";\nimport memoize from \"memoizee\";\n\nconst jlstzOffsets: [number, number][][] = [\n  [\n    [0, 0],\n    [0, 0],\n    [0, 0],\n    [0, 0],\n    [0, 0],\n  ],\n  [\n    [0, 0],\n    [0, 1],\n    [1, 1],\n    [-2, 0],\n    [-2, 1],\n  ],\n  [\n    [0, 0],\n    [0, 0],\n    [0, 0],\n    [0, 0],\n    [0, 0],\n  ],\n  [\n    [0, 0],\n    [0, -1],\n    [1, -1],\n    [-2, 0],\n    [-2, -1],\n  ],\n];\n\nconst oOffsets: [number, number][][] = [\n  [[0, 0]],\n  [[1, 0]],\n  [[1, -1]],\n  [[0, -1]],\n];\n\nconst iOffsets: [number, number][][] = [\n  [\n    [0, 0],\n    [0, -1],\n    [0, 2],\n    [0, -1],\n    [0, 2],\n  ],\n  [\n    [0, -1],\n    [0, 0],\n    [0, 0],\n    [-1, 0],\n    [2, 0],\n  ],\n  [\n    [-1, -1],\n    [-1, 1],\n    [-1, -2],\n    [0, 1],\n    [0, -2],\n  ],\n  [\n    [-1, 0],\n    [-1, 0],\n    [-1, 0],\n    [1, 0],\n    [-2, 0],\n  ],\n];\n\nconst zMinos: [number, number][] = [\n  [1, 1],\n  [1, 2],\n  [2, 2],\n  [2, 3],\n];\n\nconst sMinos: [number, number][] = [\n  [1, 2],\n  [1, 3],\n  [2, 1],\n  [2, 2],\n];\n\nconst jMinos: [number, number][] = [\n  [1, 1],\n  [2, 1],\n  [2, 2],\n  [2, 3],\n];\n\nconst lMinos: [number, number][] = [\n  [1, 3],\n  [2, 1],\n  [2, 2],\n  [2, 3],\n];\n\nconst tMinos: [number, number][] = [\n  [1, 2],\n  [2, 1],\n  [2, 2],\n  [2, 3],\n];\n\nconst oMinos: [number, number][] = [\n  [1, 2],\n  [1, 3],\n  [2, 2],\n  [2, 3],\n];\n\nconst iMinos: [number, number][] = [\n  [2, 1],\n  [2, 2],\n  [2, 3],\n  [2, 4],\n];\n\nconst tetrominos = [\n  {\n    color: green,\n    minos: [sMinos],\n    offsets: jlstzOffsets,\n  },\n  {\n    color: red,\n    minos: [zMinos],\n    offsets: jlstzOffsets,\n  },\n  {\n    color: darkBlue,\n    minos: [jMinos],\n    offsets: jlstzOffsets,\n  },\n  {\n    color: orange,\n    minos: [lMinos],\n    offsets: jlstzOffsets,\n  },\n  {\n    color: purple,\n    minos: [tMinos],\n    offsets: jlstzOffsets,\n  },\n  {\n    color: yellow,\n    minos: [oMinos],\n    offsets: oOffsets,\n  },\n  {\n    color: blue,\n    minos: [iMinos],\n    offsets: iOffsets,\n  },\n];\n\nconst rotateCoords = (coords: [number, number][], size: number) => {\n  const result: [number, number][] = [];\n  for (const coord of coords) {\n    result.push([coord[1], size - coord[0] - 1]);\n  }\n  return result;\n};\n\nfor (let type = 1; type < 8; type++) {\n  const tetromino = tetrominos[type - 1]!;\n  for (let i = 0; i < 3; i++) {\n    tetromino.minos.push(rotateCoords(tetromino.minos[i], 5));\n  }\n}\n\nexport const getOffsets = (type: Mino, orientation: number) => {\n  return tetrominos[type - 1].offsets[orientation];\n};\n\nexport const getMinos = (type: Mino, orientation: number) => {\n  return tetrominos[type - 1].minos[orientation];\n};\n\nconst _getColor = (type: Mino, alpha: number = 1) => {\n  return tetrominos[type - 1].color.alpha(alpha).toString();\n};\n\nexport const getColor = memoize(_getColor, { length: 2 });\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SnakeRenderer from \"../../snake/components/SnakeRenderer\";\n// import FluidShader from \"../../shaders/components/FluidShader\";\n\nconst HomePageDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  position: fixed;\n  width: 100%;\n  font-family: Quicksand, sans-serif;\n  line-height: 1.3;\n  .bio {\n    max-width: 380px;\n    width: calc(100vw - 48px);\n    padding: 16px;\n    font-size: 18px;\n    margin-bottom: 80px;\n  }\n  .footer {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    padding: 24px;\n    font-size: 14px;\n    opacity: 0.6;\n    p {\n      margin: 0;\n    }\n  }\n  a {\n    color: black;\n    text-decoration: underline;\n    text-decoration-color: transparent;\n    font-weight: 600;\n    transition: all 0.15s;\n    &:hover {\n      text-decoration-color: black;\n    }\n  }\n`;\n\nconst HomePageBackground = styled.div`\n  position: absolute;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Links = styled.div`\n  display: flex;\n  justify-content: space-between;\n  a {\n    font-weight: 400;\n    color: #666;\n    cursor: pointer;\n    &:hover {\n      color: black;\n    }\n  }\n  span {\n    color: #666;\n  }\n`;\n\ninterface Theme {\n  background: React.ReactNode;\n  link: string;\n  name: string;\n}\n\nconst HomePage: React.FC = (props) => {\n  console.log(\"props\", props);\n\n  const themes: { [key: string]: Theme } = {\n    snake: {\n      background: <SnakeRenderer></SnakeRenderer>,\n      link: \"https://github.com/Xyzrr/rl-snake\",\n      name: \"DQN playing Snake\",\n    },\n    // shader: {\n    //   background: <FluidShader></FluidShader>,\n    //   link: \"#\",\n    //   name: \"Shader\",\n    // },\n  };\n  let themeKey: string | null = null;\n  if (window.location.hash) {\n    themeKey = window.location.hash.substr(1);\n  }\n  if (!themeKey || !(themeKey in themes)) {\n    const choices = Object.keys(themes);\n    themeKey = choices[Math.floor(Math.random() * choices.length)];\n  }\n  const theme = themes[themeKey];\n\n  return (\n    <HomePageDiv>\n      <HomePageBackground>{theme.background}</HomePageBackground>\n      <div className=\"bio\">\n        <p>Hey, I'm John. </p>\n        <p>\n          For the foreseeable future I'll be building <a href=\"https://matrices.app?ref=johnqian.com\" target=\"_blank\">Matrices</a> as a cofounder. Previously I did eng and design at <a href=\"https://www.adept.ai/\" target=\"_blank\">Adept</a>, <a href=\"https://wandb.com/\" target=\"_blank\">Weights & Biases</a>, and Google.\n          I like writing concisely and making silky user experiences.\n        </p>\n        <p>\n          Let me know if you want to meet up; I'm usually in SF. I'm most likely to respond if you provide some indication that you'll extend my model of the world :)\n        </p>\n        <Links>\n          <a href=\"https://projects.johnqian.com\">Projects</a>\n          <span>∙</span>\n          <a href=\"https://blog.johnqian.com\">Blog</a>\n          <span>∙</span>\n          <a href=\"/gains\">Gains</a>\n          <span>∙</span>\n          <a href=\"mailto:johnlongqian+site@gmail.com\">Contact</a>\n        </Links>\n      </div>\n      <div className=\"footer\">\n        <p>Background:</p>\n        <p>\n          <a href={theme.link}>{theme.name}</a>\n        </p>\n      </div>\n    </HomePageDiv>\n  );\n};\n\nexport default HomePage;\n","import * as _ from \"lodash\";\nimport * as constants from \"./constants\";\nimport TWEEN from \"@tweenjs/tween.js\";\nimport { array2D } from \"../common/util/helpers\";\n\n/**\n * Manages positioning enemies on a grid, independent of enemy states.\n * Also controls zooming animation of grid.\n */\nexport class EnemyGrid {\n  WIDTH_HEIGHT_RATIO = constants.MATRIX_COLS / constants.MATRIX_ROWS_VISIBLE;\n  GUTTER_WIDTH_RATIO = 2 / constants.MATRIX_COLS;\n\n  // given properties\n  enemies = new Set<string>();\n  fullWidth = 0;\n  fullHeight = 0;\n  gapWidth = 0;\n  maxEnemyWidth?: number;\n\n  // derived properies\n  grid: (string | null)[][] = [];\n  enemyWidth = 0;\n  animatedEnemyWidth = 0;\n  yOffset = 0;\n\n  setMaxEnemyWidth(max: number) {\n    this.maxEnemyWidth = max;\n  }\n\n  setEnemyWidth(width: number, duration = 0) {\n    this.enemyWidth = width;\n    if (duration === 0) {\n      this.animatedEnemyWidth = width;\n    } else {\n      new TWEEN.Tween(this)\n        .to({ animatedEnemyWidth: width }, duration)\n        .easing(TWEEN.Easing.Quadratic.InOut)\n        .start();\n    }\n  }\n\n  /**\n   * @param compact Make grid as small as possible; currently unused\n   * @returns The enemyWidth, rowCount and colCount that fits\n   * all the enemies in the available space such that they're\n   * as large as possible.\n   */\n  getOptimalDimensions(enemyCount: number, compact = false) {\n    const sideWidth = this.getSideWidth();\n\n    // try fitting horizontally\n    let enemyWidthWide = 0;\n    let rowCap = 0;\n    let sideCols = 1;\n    while (true) {\n      enemyWidthWide =\n        sideWidth / (sideCols + (sideCols + 1) * this.GUTTER_WIDTH_RATIO);\n      const enemyHeight = enemyWidthWide / this.WIDTH_HEIGHT_RATIO;\n      const gutterWidth = enemyWidthWide * this.GUTTER_WIDTH_RATIO;\n      rowCap = Math.floor(\n        (this.fullHeight - gutterWidth) / (enemyHeight + gutterWidth)\n      );\n\n      if (rowCap * sideCols >= Math.ceil(enemyCount / 2)) {\n        break;\n      }\n\n      sideCols++;\n    }\n\n    //try fitting vertically\n    let enemyHeightTall = 0;\n    let colCap = 0;\n    let rows = 1;\n    while (true) {\n      enemyHeightTall =\n        this.fullHeight /\n        (rows + (rows + 1) * this.WIDTH_HEIGHT_RATIO * this.GUTTER_WIDTH_RATIO);\n      const enemyWidth = enemyHeightTall * this.WIDTH_HEIGHT_RATIO;\n      const gutterWidth = enemyWidth * this.GUTTER_WIDTH_RATIO;\n      colCap = Math.floor(\n        (sideWidth - gutterWidth) / (enemyWidth + gutterWidth)\n      );\n\n      if (colCap * rows >= Math.ceil(enemyCount / 2)) {\n        break;\n      }\n\n      rows++;\n    }\n\n    let bestEnemyWidth: number;\n    let bestRowCount: number;\n    let bestColCount: number;\n\n    const enemyWidthTall = enemyHeightTall * this.WIDTH_HEIGHT_RATIO;\n    if (enemyWidthTall > enemyWidthWide) {\n      bestEnemyWidth = enemyWidthTall;\n      bestRowCount = rows;\n      if (compact) {\n        bestColCount = Math.ceil(enemyCount / rows / 2) * 2;\n      } else {\n        bestColCount = colCap * 2;\n      }\n    } else {\n      bestEnemyWidth = enemyWidthWide;\n      if (compact) {\n        bestRowCount = rowCap;\n      } else {\n        bestRowCount = Math.ceil(enemyCount / (sideCols * 2));\n      }\n      bestColCount = sideCols * 2;\n    }\n\n    if (this.maxEnemyWidth && bestEnemyWidth > this.maxEnemyWidth) {\n      bestEnemyWidth = this.maxEnemyWidth;\n    }\n\n    return [bestEnemyWidth, bestRowCount, bestColCount];\n  }\n\n  /**\n   * Adapt to screen resize.\n   */\n  reshape(newEnemies: Set<string>) {\n    console.log(\"RESHAPING\");\n    const [enemyWidth, rows, cols] = this.getOptimalDimensions(newEnemies.size);\n    this.setEnemyWidth(enemyWidth);\n    this.grid = array2D<string | null>(rows, cols, null);\n    this.enemies = new Set();\n    this.addNewEnemies(newEnemies);\n  }\n\n  getGridCapacity() {\n    return this.grid.length === 0 ? 0 : this.grid.length * this.grid[0].length;\n  }\n\n  /** Grow to accomodate new enemies, anchored at center-top */\n  expand(enemyCount: number) {\n    console.log(\"EXPANDING\");\n    const [enemyWidth, rows, cols] = this.getOptimalDimensions(enemyCount);\n    const newGrid = array2D<string | null>(rows, cols, null);\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[i].length; j++) {\n        const offset = (cols - this.grid[0].length) / 2;\n        newGrid[i][j + offset] = this.grid[i][j];\n      }\n    }\n    this.setEnemyWidth(enemyWidth, 1001);\n    this.grid = newGrid;\n  }\n\n  getGutterWidth() {\n    return this.enemyWidth * this.GUTTER_WIDTH_RATIO;\n  }\n\n  // not used anymore but may be useful later\n  getGridExpectedSideWidth() {\n    if (this.grid.length === 0) {\n      return 0;\n    }\n\n    let cols = this.grid[0].length / 2;\n    findEmptyColsLoop: for (let j = 0; j < this.grid[0].length / 2; j++) {\n      for (let i = 0; i < this.grid.length; i++) {\n        if (\n          this.grid[i][j] != null ||\n          this.grid[i][this.grid[i].length - 1 - j] != null\n        ) {\n          break findEmptyColsLoop;\n        }\n      }\n      cols--;\n    }\n\n    return this.enemyWidth * cols + this.getGutterWidth() * (cols + 1);\n  }\n\n  getGridExpectedHeight() {\n    let rows = this.grid.length;\n    findEmptyRowsLoop: for (let i = this.grid.length - 1; i > 0; i--) {\n      for (let j = 0; j < this.grid[i].length; j++) {\n        if (this.grid[i][j] != null) {\n          break findEmptyRowsLoop;\n        }\n      }\n      rows--;\n    }\n\n    return (\n      (this.enemyWidth / this.WIDTH_HEIGHT_RATIO) * rows +\n      this.getGutterWidth() * (rows + 1)\n    );\n  }\n\n  getSideWidth() {\n    return (this.fullWidth - this.gapWidth) / 2;\n  }\n\n  updateYOffset(duration = 0) {\n    const expectedHeight = this.getGridExpectedHeight();\n    const yOffset = (this.fullHeight - expectedHeight) / 2;\n    if (duration === 0) {\n      this.yOffset = yOffset;\n    } else {\n      new TWEEN.Tween(this)\n        .to({ yOffset }, duration)\n        .easing(TWEEN.Easing.Quadratic.InOut)\n        .start();\n    }\n  }\n\n  removeMissingEnemies(newEnemies: Set<string>) {\n    for (let i in this.grid) {\n      for (let j in this.grid[i]) {\n        const enemy = this.grid[i][j];\n        if (enemy != null && !newEnemies.has(enemy)) {\n          this.grid[i][j] = null;\n        }\n      }\n    }\n  }\n\n  addNewEnemies(newEnemies: Set<string>) {\n    const gen = this.addPath();\n    let coord = gen.next().value as number[];\n    console.error(\"ABC attempting with grid\", _.cloneDeep(this.grid));\n    console.error(\"enemies\", this.enemies, newEnemies);\n    for (let enemy of newEnemies) {\n      if (!this.enemies.has(enemy)) {\n        while (this.grid[coord[0]][coord[1]] != null) {\n          coord = gen.next().value as number[];\n          console.error(\"ABC coord\", coord);\n        }\n        this.grid[coord[0]][coord[1]] = enemy;\n      }\n    }\n  }\n\n  *sidePath(side: \"left\" | \"right\") {\n    if (this.grid.length === 0) {\n      return;\n    }\n\n    let startJ: number;\n    if (side === \"left\") {\n      startJ = this.grid[0].length / 2 - 1;\n    } else {\n      startJ = this.grid[0].length / 2;\n    }\n    for (let r = 0; r < Math.max(this.grid.length, this.grid[0].length); r++) {\n      let endJ: Number;\n      if (side === \"left\") {\n        endJ = this.grid[0].length / 2 - 1 - r;\n      } else {\n        endJ = this.grid[0].length / 2 + r;\n      }\n\n      // move vertically\n      if (endJ >= 0 && endJ < this.grid[0].length) {\n        for (let i = 0; i < r; i++) {\n          if (i < this.grid.length) {\n            yield [i, endJ];\n          }\n        }\n      }\n\n      // move horizontally\n      if (r < this.grid.length) {\n        for (\n          let j = startJ;\n          side === \"left\" ? j >= endJ : j <= endJ;\n          j += side === \"left\" ? -1 : 1\n        ) {\n          if (j >= 0 && j < this.grid[0].length) {\n            yield [r, j];\n          }\n        }\n      }\n    }\n  }\n\n  *addPath() {\n    const left = this.sidePath(\"left\");\n    const right = this.sidePath(\"right\");\n    for (const l of left) {\n      yield l;\n      yield right.next().value;\n    }\n  }\n\n  /**\n   * Adapts the grid to new information.\n   */\n  update(\n    newEnemies: Set<string>,\n    fullWidth: number,\n    fullHeight: number,\n    gapWidth: number\n  ) {\n    console.log(\"GRID\", this.grid);\n\n    this.gapWidth = gapWidth;\n\n    if (fullWidth !== this.fullWidth || fullHeight !== this.fullHeight) {\n      this.fullWidth = fullWidth;\n      this.fullHeight = fullHeight;\n      this.reshape(newEnemies);\n      this.updateYOffset();\n      this.enemies = newEnemies;\n      return;\n    }\n\n    if (_.isEqual(this.enemies, newEnemies)) {\n      return;\n    }\n\n    this.removeMissingEnemies(newEnemies);\n\n    if (newEnemies.size > this.getGridCapacity()) {\n      this.expand(newEnemies.size);\n    }\n\n    this.addNewEnemies(newEnemies);\n\n    this.updateYOffset(this.enemies.size === 0 ? 0 : 2000);\n\n    this.enemies = newEnemies;\n  }\n\n  getEnemyCoordinates(): [{ [cid: string]: number[] }, number] {\n    const enemyCoords: { [cid: string]: number[] } = {};\n    const centerX = this.fullWidth / 2;\n\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[i].length; j++) {\n        const enemy = this.grid[i][j];\n        if (enemy != null) {\n          let x: number;\n          if (j >= this.grid[i].length / 2) {\n            const colsRight = j - this.grid[i].length / 2;\n            x =\n              centerX +\n              this.gapWidth / 2 +\n              colsRight * this.animatedEnemyWidth +\n              (colsRight + 1) * this.getGutterWidth();\n          } else {\n            const colsLeft = this.grid[i].length / 2 - 1 - j;\n            x =\n              centerX -\n              this.gapWidth / 2 -\n              (colsLeft + 1) *\n                (this.animatedEnemyWidth + this.getGutterWidth());\n          }\n          const y =\n            this.yOffset +\n            i * (this.animatedEnemyWidth / this.WIDTH_HEIGHT_RATIO) +\n            (i + 1) * this.getGutterWidth();\n          enemyCoords[enemy] = [x, y];\n        }\n      }\n    }\n    return [enemyCoords, this.animatedEnemyWidth];\n  }\n}\n","import TWEEN from \"@tweenjs/tween.js\";\nimport { getColor, getMinos } from \"./tetrominos\";\nimport * as constants from \"./constants\";\nimport {\n  TetrisFieldTile,\n  ActivePiece,\n  Mino,\n  ServerState,\n  PlayerState,\n  EnemyAnimationState,\n} from \"./types\";\nimport { gray } from \"../common/colors\";\nimport { EnemyGrid } from \"./EnemyGrid\";\n\nconst addCoords = (a: [number, number], b: [number, number]) => {\n  const result: [number, number] = [a[0] + b[0], a[1] + b[1]];\n  return result;\n};\n\nconst translate = (activePiece: ActivePiece, translation: [number, number]) => {\n  return {\n    ...activePiece,\n    position: addCoords(activePiece.position, translation),\n  };\n};\n\nconst activePieceIsColliding = (\n  activePiece: ActivePiece,\n  field: TetrisFieldTile[][]\n) => {\n  const minos = getMinos(activePiece.pieceType, activePiece.orientation);\n\n  for (const coord of minos) {\n    const pos = addCoords(activePiece.position, coord);\n    if (\n      pos[0] < 0 ||\n      pos[0] >= constants.MATRIX_ROWS ||\n      pos[1] < 0 ||\n      pos[1] >= constants.MATRIX_COLS ||\n      field[pos[0]][pos[1]]\n    ) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst moveToGround = (activePiece: ActivePiece, field: TetrisFieldTile[][]) => {\n  let testShift = 0;\n  while (\n    !activePieceIsColliding(translate(activePiece, [testShift, 0]), field)\n  ) {\n    testShift++;\n  }\n  return translate(activePiece, [testShift - 1, 0]);\n};\n\nexport default class Renderer {\n  ctx: CanvasRenderingContext2D;\n  enemyGrid: EnemyGrid;\n  enemyStates: { [clientID: string]: PlayerState & EnemyAnimationState } = {};\n  playerState: PlayerState | null = null;\n\n  constructor(ctx: CanvasRenderingContext2D) {\n    this.ctx = ctx;\n    this.enemyGrid = new EnemyGrid();\n  }\n\n  getWidth() {\n    return this.ctx.canvas.width / window.devicePixelRatio;\n  }\n\n  getHeight() {\n    return this.ctx.canvas.height / window.devicePixelRatio;\n  }\n\n  renderBorder(x: number, y: number, unit: number, completeness: number) {\n    const width = unit * constants.MATRIX_COLS;\n    const height = unit * constants.MATRIX_ROWS_VISIBLE;\n\n    this.ctx.strokeStyle = \"#666\";\n    if (completeness === 1) {\n      this.ctx.strokeRect(x - 1, y - 1, width + 2, height + 2);\n    } else {\n      const verticalCompleteness = Math.min(completeness * 2, 1);\n      const centerY = y + height / 2;\n      const topY = centerY - (height / 2 + 1) * verticalCompleteness;\n      const bottomY = centerY + (height / 2 + 1) * verticalCompleteness;\n\n      const horizontalCompleteness = Math.max((completeness - 0.5) * 2, 0);\n      const leftX = x + (width / 2) * horizontalCompleteness;\n      const rightX = x + width - (width / 2) * horizontalCompleteness;\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(x - 1, topY);\n      this.ctx.lineTo(x - 1, bottomY);\n      this.ctx.moveTo(x + width + 1, topY);\n      this.ctx.lineTo(x + width + 1, bottomY);\n\n      this.ctx.moveTo(x, y - 1);\n      this.ctx.lineTo(leftX, y - 1);\n      this.ctx.moveTo(x, y + height + 1);\n      this.ctx.lineTo(leftX, y + height + 1);\n      this.ctx.moveTo(x + width, y - 1);\n      this.ctx.lineTo(rightX, y - 1);\n      this.ctx.moveTo(x + width, y + height + 1);\n      this.ctx.lineTo(rightX, y + height + 1);\n\n      this.ctx.stroke();\n    }\n  }\n\n  renderGrid(x: number, y: number, unit: number) {\n    const width = unit * constants.MATRIX_COLS;\n    const height = unit * constants.MATRIX_ROWS_VISIBLE;\n\n    this.ctx.strokeStyle = \"#161616\";\n    for (let i = 0; i < constants.MATRIX_ROWS_VISIBLE; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(x, y + i * unit);\n      this.ctx.lineTo(x + width, y + i * unit);\n      this.ctx.stroke();\n    }\n    for (let j = 0; j < constants.MATRIX_COLS; j++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(x + j * unit, y);\n      this.ctx.lineTo(x + j * unit, y + height);\n      this.ctx.stroke();\n    }\n  }\n\n  renderActivePiece(\n    x: number,\n    y: number,\n    unit: number,\n    activePiece: ActivePiece,\n    ghost: boolean = false\n  ) {\n    for (const coord of getMinos(\n      activePiece.pieceType,\n      activePiece.orientation\n    )) {\n      this.ctx.fillStyle = ghost\n        ? getColor(activePiece.pieceType, constants.GHOST_ALPHA)\n        : getColor(activePiece.pieceType);\n      const col = activePiece.position[1] + coord[1];\n      const row =\n        activePiece.position[0] + coord[0] - constants.MATRIX_ROWS_HIDDEN;\n      if (row >= 0) {\n        this.ctx.fillRect(x + col * unit, y + row * unit, unit, unit);\n      }\n    }\n  }\n\n  renderLand(x: number, y: number, unit: number, field: TetrisFieldTile[][]) {\n    for (let i = constants.MATRIX_ROWS_HIDDEN; i < constants.MATRIX_ROWS; i++) {\n      for (let j = 0; j < constants.MATRIX_COLS; j++) {\n        const cell = field[i][j];\n        if (cell !== 0) {\n          this.ctx.fillStyle = getColor(cell);\n          this.ctx.fillRect(\n            x + unit * j,\n            y + unit * (i - constants.MATRIX_ROWS_HIDDEN),\n            unit,\n            unit\n          );\n        }\n      }\n    }\n  }\n\n  renderGameField(\n    x: number,\n    y: number,\n    unit: number,\n    field: TetrisFieldTile[][],\n    activePiece: ActivePiece | undefined,\n    options?: {\n      showGrid?: boolean;\n      borderCompleteness?: number;\n      fieldOpacity?: number;\n    }\n  ) {\n    const opts = options || {};\n    const borderCompleteness =\n      opts.borderCompleteness == null ? 1 : opts.borderCompleteness;\n    const showGrid = opts.showGrid == null ? true : opts.showGrid;\n    const fieldOpacity = opts.fieldOpacity == null ? 1 : opts.fieldOpacity;\n\n    this.renderBorder(x, y, unit, borderCompleteness);\n    if (showGrid) {\n      this.renderGrid(x, y, unit);\n    }\n    this.ctx.globalAlpha = fieldOpacity;\n    this.renderLand(x, y, unit, field);\n    if (activePiece) {\n      this.renderActivePiece(x, y, unit, activePiece);\n      const ghostPiece = moveToGround(activePiece, field);\n      this.renderActivePiece(x, y, unit, ghostPiece, true);\n    }\n    this.ctx.globalAlpha = 1;\n  }\n\n  renderBagPreview(x: number, y: number, unit: number, nextPieces: Mino[]) {\n    for (let i = 0; i < Math.min(5, nextPieces.length); i++) {\n      const type = nextPieces[i];\n      if ((type as any) === \".\") {\n        break;\n      }\n      this.ctx.fillStyle = getColor(type);\n      for (const coord of getMinos(type, 0)) {\n        this.ctx.fillRect(\n          x + coord[1] * unit,\n          y + (i * 3 + coord[0]) * unit,\n          unit,\n          unit\n        );\n      }\n    }\n  }\n\n  renderHoldSlot(\n    x: number,\n    y: number,\n    unit: number,\n    pieceType: Mino | undefined,\n    held: boolean\n  ) {\n    if (pieceType) {\n      this.ctx.fillStyle = held ? gray.toString() : getColor(pieceType);\n      for (const coord of getMinos(pieceType, 0)) {\n        this.ctx.fillRect(x + coord[1] * unit, y + coord[0] * unit, unit, unit);\n      }\n    }\n  }\n\n  renderGameFrame(\n    x: number,\n    y: number,\n    unit: number,\n    margin: number,\n    state: PlayerState | null\n  ) {\n    if (state) {\n      this.renderHoldSlot(x - unit - margin, y, unit, state.hold, state.held);\n      this.renderGameField(\n        x + unit * 4,\n        y,\n        unit,\n        state.field,\n        state.activePiece\n      );\n      this.renderBagPreview(\n        x + unit * (constants.MATRIX_COLS + 4) + margin,\n        y,\n        unit,\n        state.nextPieces\n      );\n    } else {\n      this.renderGrid(x + unit * 4, y, unit);\n    }\n  }\n\n  renderSelf(state: PlayerState | null) {\n    let unit = 28;\n    if (unit * 22 > this.getHeight()) {\n      unit = 20;\n    }\n    const margin = 4;\n    const frameWidth = unit * (constants.MATRIX_COLS + 4 + 5) + margin * 2;\n    const frameHeight = unit * constants.MATRIX_ROWS_VISIBLE;\n\n    this.renderGameFrame(\n      this.getWidth() / 2 - frameWidth / 2,\n      this.getHeight() / 2 - frameHeight / 2,\n      unit,\n      margin,\n      state\n    );\n\n    return frameWidth;\n  }\n\n  renderEnemy(\n    x: number,\n    y: number,\n    unit: number,\n    enemyState: PlayerState & EnemyAnimationState\n  ) {\n    let borderCompleteness = 1;\n    let fieldOpacity = 1;\n    if (enemyState.animationType === \"joining\") {\n      borderCompleteness = Math.min(enemyState.animationProgress * 2.5, 1);\n      fieldOpacity = Math.max((enemyState.animationProgress - 0.4) * 1.67, 0);\n    }\n    if (enemyState.animationType === \"disconnecting\") {\n      borderCompleteness = Math.min(\n        1 - (enemyState.animationProgress - 0.6) * 2.5,\n        1\n      );\n      fieldOpacity = Math.max(1 - enemyState.animationProgress * 1.67, 0);\n    }\n    this.renderGameField(x, y, unit, enemyState.field, enemyState.activePiece, {\n      showGrid: false,\n      borderCompleteness,\n      fieldOpacity,\n    });\n  }\n\n  renderEnemies(gapWidth: number) {\n    const enemies = new Set<string>();\n    for (let cid in this.enemyStates) {\n      enemies.add(cid);\n    }\n    this.enemyGrid.setMaxEnemyWidth(gapWidth * 0.4);\n    this.enemyGrid.update(enemies, this.getWidth(), this.getHeight(), gapWidth);\n\n    const [enemyCoords, enemyWidth] = this.enemyGrid.getEnemyCoordinates();\n    const unit = enemyWidth / constants.MATRIX_COLS;\n\n    Object.entries(enemyCoords).forEach(([cid, coords]) => {\n      const enemyState = this.enemyStates[cid];\n      this.renderEnemy(coords[0], coords[1], unit, enemyState);\n    });\n  }\n\n  renderEverything() {\n    this.ctx.clearRect(0, 0, this.getWidth(), this.getHeight());\n\n    const selfWidth = this.renderSelf(this.playerState);\n\n    const sideWidth = (this.getWidth() - selfWidth) / 2;\n    if (sideWidth > 80 && this.getHeight() > 80) {\n      this.renderEnemies(selfWidth);\n    }\n  }\n\n  updateFromServer(serverState: ServerState, clientID: string) {\n    for (let cid in serverState.playerStates) {\n      if (cid !== clientID) {\n        if (this.enemyStates[cid] == null) {\n          this.enemyStates[cid] = {\n            ...serverState.playerStates[cid],\n            animationType: \"joining\",\n            animationProgress: 0,\n            tween: null,\n          };\n          this.enemyStates[cid].tween = new TWEEN.Tween(this.enemyStates[cid])\n            .to({ animationProgress: 1 }, 1001)\n            .easing(TWEEN.Easing.Quadratic.Out)\n            .onComplete(() => {\n              this.enemyStates[cid].animationType = null;\n            })\n            .start();\n        } else {\n          for (let key in serverState.playerStates[cid]) {\n            // @ts-ignore\n            this.enemyStates[cid][key] = serverState.playerStates[cid][key];\n          }\n        }\n      }\n    }\n\n    for (let cid in this.enemyStates) {\n      const enemyState = this.enemyStates[cid];\n      if (\n        enemyState.animationType !== \"disconnecting\" &&\n        serverState.playerStates[cid] == null\n      ) {\n        enemyState.animationType = \"disconnecting\";\n        enemyState.animationProgress = 0;\n        if (enemyState.tween) {\n          enemyState.tween.stop();\n        }\n        enemyState.tween = new TWEEN.Tween(enemyState)\n          .to({ animationProgress: 1 }, 1001)\n          .easing(TWEEN.Easing.Quadratic.Out)\n          .onComplete(() => {\n            delete this.enemyStates[cid];\n          })\n          .start();\n      }\n    }\n  }\n\n  updateFromPrediction(predictedState: PlayerState | null) {\n    this.playerState = predictedState;\n  }\n}\n","export const MATRIX_COLS = 10;\nexport const MATRIX_ROWS = 40;\nexport const MATRIX_ROWS_VISIBLE = 20;\nexport const MATRIX_ROWS_HIDDEN = MATRIX_ROWS - MATRIX_ROWS_VISIBLE;\n\nexport const TICK_DURATION = 200;\nexport const DAS = 117;\nexport const ARR = 22;\n\nexport const GHOST_ALPHA = 0.3;\n","import TWEEN from \"@tweenjs/tween.js\";\nimport React, { useRef } from \"react\";\n\nimport styled from \"styled-components\";\nimport * as constants from \"../constants\";\nimport * as _ from \"lodash\";\nimport produce from \"immer\";\nimport \"../wasm_exec\";\nimport useWindowSize from \"../../common/util/useWindowSize\";\nimport { resizeCanvas } from \"../../common/util/helpers\";\nimport {\n  EverythingState,\n  ServerState,\n  PlayerState,\n  PlayerInput,\n} from \"../types\";\nimport Renderer from \"../Renderer\";\n\nconst keyBindings = {\n  moveLeft: 37,\n  moveRight: 39,\n  rotateClockwise: 38,\n  rotateCounterClockwise: 90,\n  softDrop: 40,\n  hardDrop: 32,\n  hold: 67,\n};\n\nconst keyDown: {\n  [key: string]: { downTime: number; lastTriggered: number };\n} = {};\n\nconst TetrisPageDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  flex-wrap: wrap;\n  background: black;\n`;\n\nexport let playerInputs: PlayerInput[] = [];\n\nasync function startLocalGameEngine() {\n  // @ts-ignore\n  const go = new Go();\n  console.log(\"fetching go\");\n  // @ts-ignore\n  let { instance } = await WebAssembly.instantiateStreaming(\n    fetch(\"main.wasm\"),\n    go.importObject\n  );\n  console.log(\"finished fetching\");\n  await go.run(instance);\n  console.log(\"go program halted\");\n}\n\n//TODO: fix types\nconst goToJSState = (s: any) => {\n  return produce(s, (draft: any) => {\n    for (const clientID of Object.keys(s.playerStates)) {\n      draft.playerStates[clientID] = goToJSPlayerState(\n        s.playerStates[clientID]\n      );\n    }\n  }) as any;\n};\n\nexport const goToJSPlayerState = (s: any) => {\n  return {\n    ...s,\n    activePiece: {\n      ...s.activePiece,\n      position: [s.activePiece.position.row, s.activePiece.position.col],\n    },\n  } as PlayerState;\n};\n\nexport const jsToGoPlayerState = (s: PlayerState) => {\n  return {\n    ...s,\n    activePiece: s.activePiece\n      ? {\n          ...s.activePiece,\n          position: {\n            row: s.activePiece.position[0],\n            col: s.activePiece.position[1],\n          },\n        }\n      : undefined,\n  };\n};\n\nconst reconcileServerState = (\n  everything: EverythingState,\n  newState: ServerState\n) => {\n  if (everything.clientID == null) {\n    throw new Error(\"clientID is null when reconciling server state\");\n  }\n\n  if (newState.playerStates == null) {\n    throw new Error(`server state is malformed: ${newState.playerStates}`);\n  }\n  everything.serverState = newState;\n\n  const newClientState =\n    everything.serverState.playerStates[everything.clientID];\n  if (newClientState == null) {\n    return;\n  }\n\n  const time = newClientState.time;\n\n  if ((everything.frameStartTime - time) % 17 !== 0) {\n    throw new Error(\n      `frameStartTime ${everything.frameStartTime} and server update time ${time} misaligned`\n    );\n  }\n\n  const replaceIndex =\n    everything.predictedStates.length -\n    1 -\n    (everything.frameStartTime - time) / 17;\n\n  if (replaceIndex < 0) {\n    throw new Error(\n      `Received server update from before the last update (index ${replaceIndex}); predictedStates is probably too short (length ${everything.predictedStates.length}).`\n    );\n  }\n\n  if (replaceIndex >= everything.predictedStates.length) {\n    console.log(\n      `Received server update from the future (index ${replaceIndex}); predictedStates is probably lagging behind (length ${everything.predictedStates.length}). Dropping update.`\n    );\n    return;\n  }\n\n  if (_.isEqual(everything.predictedStates[replaceIndex], newClientState)) {\n    console.log(\n      `Success: server state matches with client! Slicing predictedStates from index ${replaceIndex} to ${everything.predictedStates.length}`\n    );\n    everything.predictedStates = everything.predictedStates.slice(replaceIndex);\n    everything.inputHistory = everything.inputHistory.slice(replaceIndex);\n    return;\n  }\n\n  console.log(\n    \"stringified predicted states\",\n    JSON.stringify(everything.predictedStates)\n  );\n\n  console.log(\n    \"Server state\",\n    newClientState,\n    \"conflicts with client state\",\n    JSON.parse(JSON.stringify(everything.predictedStates[replaceIndex])),\n    \". Reconciling from index\",\n    replaceIndex,\n    \"to\",\n    everything.predictedStates.length\n  );\n\n  everything.inputHistory = everything.inputHistory.slice(replaceIndex);\n  let predictingTime = time;\n  everything.predictedStates = [newClientState];\n\n  for (const inputs of everything.inputHistory) {\n    predictingTime += 17;\n    const lastPredictedState =\n      everything.predictedStates[everything.predictedStates.length - 1];\n    if (lastPredictedState == null) {\n      throw new Error(`last predicted state was null while reconciling`);\n    }\n\n    // @ts-ignore\n    if (typeof updateGame == \"undefined\") {\n      console.log(\n        \"updateGame not ready at first reconciliation, pushing duplicated server state for now\"\n      );\n      everything.predictedStates.push(lastPredictedState);\n      continue;\n    }\n\n    // @ts-ignore\n    const goResult = updateGame(\n      JSON.stringify(jsToGoPlayerState(lastPredictedState)),\n      JSON.stringify(inputs),\n      predictingTime\n    );\n    const newPlayerState = goToJSPlayerState(JSON.parse(goResult));\n    everything.predictedStates.push(newPlayerState);\n  }\n};\n\nconst predictState = (everything: EverythingState, inputs: PlayerInput[]) => {\n  const lastPredictedState =\n    everything.predictedStates[everything.predictedStates.length - 1];\n\n  // @ts-ignore\n  if (lastPredictedState == null || typeof updateGame == \"undefined\") {\n    everything.predictedStates.push(lastPredictedState);\n    everything.inputHistory.push(inputs);\n    return;\n  }\n\n  // @ts-ignore\n  const goResult = updateGame(\n    JSON.stringify(jsToGoPlayerState(lastPredictedState)),\n    JSON.stringify(inputs),\n    everything.frameStartTime.toString()\n  );\n  const newPlayerState = goToJSPlayerState(JSON.parse(goResult));\n\n  console.log(\"inputs\", inputs);\n  everything.predictedStates.push(newPlayerState);\n  everything.inputHistory.push(inputs);\n};\n\nconst TetrisPage: React.FC = (props) => {\n  const everythingState = useRef<EverythingState>({\n    serverState: { playerStates: {} },\n    predictedStates: [null],\n    inputHistory: [],\n    actionIndex: 0,\n    clientID: undefined,\n    frameStartTime: 0,\n    serverTimeOffset: 0,\n  });\n  const renderer = React.useRef<Renderer | null>(null);\n  const windowSize = useWindowSize();\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n\n  React.useEffect(() => {\n    if (renderer.current == null && canvasRef.current != null) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      if (ctx) {\n        renderer.current = new Renderer(ctx);\n      }\n    }\n\n    const onKeyDown = (e: KeyboardEvent) => {\n      if (keyDown[e.keyCode]) {\n        return;\n      }\n      switch (e.keyCode) {\n        case keyBindings.moveLeft:\n          sendInput(1);\n          break;\n        case keyBindings.moveRight:\n          sendInput(2);\n          break;\n        case keyBindings.rotateClockwise:\n          sendInput(3);\n          break;\n        case keyBindings.rotateCounterClockwise:\n          sendInput(4);\n          break;\n        case keyBindings.softDrop:\n          sendInput(5);\n          break;\n        case keyBindings.hardDrop:\n          sendInput(6);\n          break;\n        case keyBindings.hold:\n          sendInput(7);\n          break;\n      }\n      keyDown[e.keyCode] = { downTime: Date.now(), lastTriggered: Date.now() };\n    };\n\n    const onKeyUp = (e: KeyboardEvent) => {\n      delete keyDown[e.keyCode];\n    };\n\n    startLocalGameEngine();\n    // const socket = new WebSocket(\"wss://tetris-io.herokuapp.com/socket\");\n    // const socket = new WebSocket(\"ws://34.67.102.3:8080/socket\");\n    const socket = new WebSocket(\"ws://localhost:8080/socket\");\n    socket.onopen = () => {\n      socket.onmessage = (m) => {\n        console.log(\"got message\", m);\n\n        let parsedData = JSON.parse(m.data);\n\n        if (parsedData.messageType && parsedData.messageType === \"id\") {\n          console.log(\"Got client ID\", parsedData.id);\n          everythingState.current.clientID = parsedData.id;\n          everythingState.current.frameStartTime = parsedData.time;\n          everythingState.current.serverTimeOffset =\n            Date.now() - everythingState.current.frameStartTime;\n\n          window.setTimeout(update, 17);\n          window.addEventListener(\"keydown\", onKeyDown);\n          window.addEventListener(\"keyup\", onKeyUp);\n        } else {\n          let { newState } = parsedData;\n          newState = goToJSState(newState);\n          reconcileServerState(everythingState.current, newState);\n          if (renderer.current && everythingState.current.clientID) {\n            renderer.current.updateFromServer(\n              everythingState.current.serverState,\n              everythingState.current.clientID\n            );\n          }\n        }\n      };\n    };\n\n    const sendInput = (command: number) => {\n      const clientPlayerInput = {\n        time: everythingState.current.frameStartTime,\n        command,\n        index: everythingState.current.actionIndex,\n      };\n      playerInputs.push(clientPlayerInput);\n      everythingState.current.actionIndex++;\n\n      const serverPlayerInput = {\n        playerID: everythingState.current.clientID,\n        ...clientPlayerInput,\n      };\n      const SIMULATE_POOR_CONNECTION = false;\n      if (SIMULATE_POOR_CONNECTION) {\n        window.setTimeout(() => {\n          socket.send(JSON.stringify(serverPlayerInput));\n        }, 500);\n      } else {\n        socket.send(JSON.stringify(serverPlayerInput));\n      }\n    };\n\n    const update = () => {\n      everythingState.current.frameStartTime += 17;\n\n      predictState(everythingState.current, playerInputs);\n      if (renderer.current && everythingState.current.clientID) {\n        renderer.current.updateFromPrediction(\n          everythingState.current.predictedStates[\n            everythingState.current.predictedStates.length - 1\n          ]\n        );\n      }\n\n      playerInputs = [];\n\n      const time = Date.now();\n\n      const rightKey = keyDown[keyBindings.moveRight];\n      if (\n        rightKey &&\n        time - rightKey.downTime >= constants.DAS &&\n        time - rightKey.lastTriggered >= constants.ARR\n      ) {\n        sendInput(2);\n        if (rightKey.lastTriggered === rightKey.downTime) {\n          rightKey.lastTriggered += constants.DAS;\n        } else {\n          rightKey.lastTriggered += constants.ARR;\n        }\n      }\n\n      const leftKey = keyDown[keyBindings.moveLeft];\n      if (\n        leftKey &&\n        time - leftKey.downTime >= constants.DAS &&\n        time - leftKey.lastTriggered >= constants.ARR\n      ) {\n        sendInput(1);\n        if (leftKey.lastTriggered === leftKey.downTime) {\n          leftKey.lastTriggered += constants.DAS;\n        } else {\n          leftKey.lastTriggered += constants.ARR;\n        }\n      }\n\n      const downKey = keyDown[keyBindings.softDrop];\n      if (downKey && time - downKey.lastTriggered >= constants.ARR) {\n        sendInput(5);\n        downKey.lastTriggered += constants.ARR;\n      }\n\n      const msUntilNextUpdate =\n        everythingState.current.frameStartTime +\n        17 -\n        (Date.now() - everythingState.current.serverTimeOffset);\n      window.setTimeout(update, msUntilNextUpdate);\n    };\n\n    function animate(time: number) {\n      requestAnimationFrame(animate);\n      TWEEN.update(time);\n      if (renderer.current) {\n        renderer.current.renderEverything();\n      }\n    }\n    requestAnimationFrame(animate);\n  }, []);\n\n  React.useEffect(() => {\n    if (windowSize.width && windowSize.height) {\n      resizeCanvas(canvasRef, windowSize.width, windowSize.height);\n    }\n  }, [windowSize]);\n\n  return (\n    <TetrisPageDiv>\n      <canvas\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          background: \"black\",\n        }}\n        ref={canvasRef}\n      />\n    </TetrisPageDiv>\n  );\n};\n\nexport default TetrisPage;\n","import React from \"react\";\n\nconst TestPage: React.FC = (props) => {\n  console.log(\"testpageprops\", props);\n  return <>404 :(</>;\n};\n\nexport default TestPage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding: 16px;\n  font-family: Source Sans Pro;\n  outline: none;\n`;\n","import React from \"react\";\nimport { ParagraphBlockModel } from \"./TextEditor\";\n\ninterface ParagraphBlockProps {\n  index: number;\n  block: ParagraphBlockModel;\n}\n\nconst ParagraphBlock: React.FC<ParagraphBlockProps> = ({ index, block }) => {\n  const nodeRef = React.useRef<HTMLParagraphElement>(null);\n  return (\n    <p className=\"editor-block\" id={block.id} ref={nodeRef}>\n      {block.content}\n    </p>\n  );\n};\n\nexport default ParagraphBlock;\n","import React from \"react\";\nimport { HeaderBlockModel } from \"./TextEditor\";\n\ninterface HeaderBlockProps {\n  index: number;\n  block: HeaderBlockModel;\n}\n\nconst HeaderBlock: React.FC<HeaderBlockProps> = ({ block }) => {\n  let Tag = `h${block.level}` as \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n  return <Tag id={block.id}>{block.content}</Tag>;\n};\n\nexport default HeaderBlock;\n","export default function randomID() {\n  return `${Math.floor(Math.random() * 10000000)}`;\n}\n","import * as S from \"./TextEditor.styles\";\n\nimport * as _ from \"lodash\";\nimport React from \"react\";\nimport ParagraphBlock from \"./ParagraphBlock\";\nimport HeaderBlock from \"./HeaderBlock\";\nimport randomID from \"../../common/util/randomID\";\nimport { produce } from \"immer\";\n\nexport interface HeaderBlockModel {\n  type: \"header\";\n  id: string;\n  level: 1 | 2 | 3 | 4 | 5 | 6;\n  content: string;\n}\n\nexport interface ParagraphBlockModel {\n  type: \"paragraph\";\n  id: string;\n  content: string;\n}\n\nexport type BlockModel = ParagraphBlockModel | HeaderBlockModel;\n\nconst convertDomToModel = (html: string | undefined) => {\n  if (html == null) {\n    return \"\";\n  }\n  return html;\n};\n\nconst TextEditor: React.FC = () => {\n  const [blocks, setBlocks] = React.useState<BlockModel[]>([\n    { type: \"header\", id: randomID(), level: 1, content: \"A good day\" },\n    {\n      type: \"paragraph\",\n      id: randomID(),\n      content: \"hello\",\n    },\n    {\n      type: \"paragraph\",\n      id: randomID(),\n      content: \"another paragraph\",\n    },\n  ]);\n  console.log(\"STATE\", blocks);\n\n  const onContentUpdate = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      console.log(\"step 0\");\n      const selection = window.getSelection();\n      if (selection != null) {\n        console.log(\"step 1\");\n        let anchorElement: Element | null | undefined;\n        let focusElement: Element | null | undefined;\n        if (selection.anchorNode instanceof Element) {\n          anchorElement = selection.anchorNode;\n        } else {\n          anchorElement = selection.anchorNode?.parentElement;\n        }\n        if (selection.focusNode instanceof Element) {\n          focusElement = selection.focusNode;\n        } else {\n          focusElement = selection.focusNode?.parentElement;\n        }\n        if (anchorElement != null && focusElement != null) {\n          console.log(\"step 2\");\n\n          const anchorBlockNode = anchorElement.closest(\".editor-block\");\n          const focusBlockNode = focusElement.closest(\".editor-block\");\n          if (\n            anchorBlockNode != null &&\n            focusBlockNode != null &&\n            anchorBlockNode === focusBlockNode\n          ) {\n            console.log(\"step 3\", anchorBlockNode, focusBlockNode);\n            const blockID = anchorBlockNode.id;\n            const blockIndex = _.findIndex(\n              blocks,\n              (block) => block.id === blockID\n            );\n            window.setTimeout(() => {\n              const html = anchorBlockNode.innerHTML;\n              setBlocks((old) => {\n                return produce(old, (draft: BlockModel[]) => {\n                  draft[blockIndex].content = convertDomToModel(html);\n                });\n              });\n            });\n            return;\n          }\n        }\n      }\n      e.preventDefault();\n    },\n    [blocks]\n  );\n\n  return (\n    <S.Wrapper\n      contentEditable\n      onKeyDown={onContentUpdate}\n      suppressContentEditableWarning\n      onPaste={(e) => {\n        console.group(\"Pasted:\");\n        const items = e.clipboardData.items;\n        for (let i = 0; i < items.length; i++) {\n          const item = items[i];\n          const loggedObject = {\n            data: e.clipboardData.getData(item.type),\n            asFile: item.getAsFile(),\n            asEntry: item.webkitGetAsEntry(),\n          };\n          item.getAsString((s) => {\n            (loggedObject as any).asString = s;\n          });\n          console.group(`${item.type} (${item.kind})`);\n          console.log(loggedObject);\n          console.groupEnd();\n        }\n        console.groupEnd();\n      }}\n    >\n      {blocks.map((block, blockIndex) => {\n        let Component: React.FC<any>;\n        switch (block.type) {\n          case \"header\":\n            Component = HeaderBlock;\n            break;\n          case \"paragraph\":\n            Component = ParagraphBlock;\n            break;\n        }\n        return (\n          <Component\n            index={blockIndex}\n            block={block}\n            key={block.id}\n          ></Component>\n        );\n      })}\n    </S.Wrapper>\n  );\n};\n\nexport default TextEditor;\n","import React from \"react\";\nimport TextEditor from \"../components/TextEditor\";\n\nconst TextPage: React.FC = () => {\n  return <TextEditor></TextEditor>;\n};\n\nexport default TextPage;\n","import styled from \"styled-components\";\n\nexport const Input = styled.textarea`\n  padding: 16px;\n  font-family: Source Sans Pro;\n  outline: none;\n  border: none;\n  width: 100%;\n  min-height: 100vh;\n`;\n","import * as S from \"./ClipboardPage.styles\";\n\nimport React from \"react\";\n\nconst ClipboardPage: React.FC = () => {\n  return (\n    <S.Input\n      placeholder=\"Paste anything here!\"\n      onPaste={(e) => {\n        console.group(\"Pasted:\");\n        const items = e.clipboardData.items;\n        for (let i = 0; i < items.length; i++) {\n          const item = items[i];\n          const loggedObject = {\n            data: e.clipboardData.getData(item.type),\n            asFile: item.getAsFile(),\n            asEntry: item.webkitGetAsEntry(),\n          };\n          item.getAsString((s) => {\n            (loggedObject as any).asString = s;\n          });\n          console.group(`${item.type} (${item.kind})`);\n          console.log(loggedObject);\n          console.groupEnd();\n        }\n        console.groupEnd();\n      }}\n    ></S.Input>\n  );\n};\n\nexport default ClipboardPage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  h1 {\n    font-family: Quicksand;\n    text-align: center;\n    margin-top: 64px;\n    margin-bottom: 64px;\n  }\n`;\n\nexport const Items = styled.div`\n  display: flex;\n  gap: 48px;\n  width: min(700px, 100vw - 48px);\n  margin: 0 auto;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 160px;\n  video {\n    width: 160px;\n    height: 160px;\n    object-fit: cover;\n    border-radius: 4px;\n    background: #f2f2f2;\n  }\n\n  @media (max-width: 768px) {\n    width: 108px;\n    video {\n      width: 108px;\n      height: 108px;\n    }\n  }\n`;\n\nexport const ItemTitle = styled.div`\n  margin-top: 8px;\n  margin-left: -16px;\n  margin-right: -16px;\n  font-family: Quicksand;\n  text-align: center;\n`;\n\nexport const HoverVideo = styled.video`\n  transition: filter 0.4s;\n  filter: grayscale(100%);\n  &:hover {\n    filter: grayscale(0%);\n  }\n`;\n","import * as S from \"./GainsPage.styles\";\nimport React from \"react\";\n\ninterface HoverVideoProps {\n  src?: string;\n  thumbnailTime?: number;\n}\n\nconst HoverVideo: React.FC<HoverVideoProps> = ({ src, thumbnailTime }) => {\n  const ref = React.useRef<HTMLVideoElement>(null);\n  React.useEffect(() => {\n    if (ref.current) {\n      ref.current.currentTime = thumbnailTime || 0;\n      ref.current.pause();\n    }\n  }, []);\n\n  return (\n    <S.HoverVideo\n      ref={ref}\n      src={src}\n      autoPlay\n      // muted\n      playsInline\n      onTouchStart={(e) => {\n        e.currentTarget.currentTime = 0;\n        e.currentTarget.play();\n      }}\n      onTouchEnd={(e) => {\n        e.currentTarget.currentTime = thumbnailTime || 0;\n        e.currentTarget.pause();\n      }}\n      onMouseEnter={(e) => {\n        e.currentTarget.currentTime = 0;\n        try {\n          e.currentTarget.play();\n        } catch {}\n      }}\n      onMouseLeave={(e) => {\n        e.currentTarget.currentTime = thumbnailTime || 0;\n        try {\n          e.currentTarget.pause();\n        } catch {}\n      }}\n    />\n  );\n};\n\nconst items = [\n  {\n    title: \"10 muscle ups\",\n    src: \"https://storage.googleapis.com/john-gains/10%20muscle%20ups.mp4\",\n    thumbnailTime: 5,\n  },\n  {\n    title: \"1 one arm pullup\",\n    src: \"https://storage.googleapis.com/john-gains/one%20arm%20pullup.mp4\",\n    thumbnailTime: 7.8,\n  },\n  {\n    title: \"Tuck front lever\",\n    src: \"https://storage.googleapis.com/john-gains/tuck%20front%20lever.mov\",\n    thumbnailTime: 6,\n  },\n  {\n    title: \"5 pistol squats\",\n    src: \"https://storage.googleapis.com/john-gains/5%20pistol%20squats.mp4\",\n    thumbnailTime: 8,\n  },\n];\n\nconst GainsPage: React.FC = (props) => {\n  return (\n    <S.Wrapper>\n      <h1>Progress</h1>\n      <S.Items>\n        {items.map((item) => {\n          return (\n            <S.Item>\n              <HoverVideo src={item.src} thumbnailTime={item.thumbnailTime} />\n              <S.ItemTitle>{item.title}</S.ItemTitle>\n            </S.Item>\n          );\n        })}\n      </S.Items>\n    </S.Wrapper>\n  );\n};\n\nexport default GainsPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport QLearningPage from \"./interactive-ml/pages/QLearningPage\";\nimport HomePage from \"./portfolio/pages/HomePage\";\nimport TetrisPage from \"./tetris/pages/TetrisPage\";\nimport TestPage from \"./portfolio/pages/TestPage\";\nimport TextPage from \"./text/pages/TextPage\";\nimport ClipboardPage from \"./clipboard/pages/ClipboardPage\";\nimport GainsPage from \"./portfolio/pages/GainsPage\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/tetris\" exact component={TetrisPage}></Route>\n          <Route path=\"/qlearning\" exact component={QLearningPage}></Route>\n          <Route path=\"/text\" exact component={TextPage}></Route>\n          <Route path=\"/clipboard\" exact component={ClipboardPage}></Route>\n          <Route path=\"/gains\" exact component={GainsPage}></Route>\n          <Route path=\"/\" exact component={HomePage}></Route>\n          <Route component={TestPage}></Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}